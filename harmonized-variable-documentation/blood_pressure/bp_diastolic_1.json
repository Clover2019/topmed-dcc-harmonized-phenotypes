{
  "name": "bp_diastolic_1",
  "phenotype_concept": "bp_diastolic",
  "concept_variant": 1,
  "description": "Resting diastolic blood pressure from the upper arm in a clinical setting.",
  "version": 1,
  "dcc_harmonization_id": 93,
  "data_type": "decimal",
  "measurement_units": "mmHg",
  "has_age_variable": true,
  "date_harmonized": "2018-07-31 12:33:29",
  "dcc_harmonization_comments": "This variable was harmonized by taking the average of two diastolic blood pressure (BP) measurements collected at a single clinic visit. When more than two measurements were collected, the average was calculated using the second and third measurements. In cases where either of the measurements was missing, the average was calculated discarding the missing value. If a study used a random-zero sphygmomanometer and the variables representing the zero readings were available in dbGaP, the zero reading adjustments were applied in the harmonization. In cases where the individual BP measurements were not available in dbGaP, a mean diastolic BP variable derived by the study was used for harmonization. For paired systolic and diastolic BP measurements, if one of the paired measurements was missing or the systolic BP was less than the diastolic BP, the values for both systolic BP and diastolic BP for that pair were set to missing. This harmonized variable was not adjusted for antihypertensive medication status.\n\n#### ARIC\n\nTwo subjects had a mean diastolic BP value of zero after adjusting for random zero correction. These values were kept in the harmonized diastolic BP dataset.  \n\n#### COPDGene\n\nOnly one blood pressure measurement was available for each subject at baseline, so an average diastolic BP value could not be calculated. The single measurement was used for harmonization of diastolic BP.\n\n#### FHS\n\nBecause antihypertensive medication was not recorded before Exam 4 for the Original cohort, diastolic BP values from Exam 4 were used for harmonization.\n\n#### GOLDN\n\nOnly one blood pressure measurement was available for each subject at baseline, so an average diastolic BP value could not be calculated. The single measurement was used for harmonization of diastolic BP.\n\n#### Instrumentation\n\nThe instruments used for BP measurements were different among studies, including standard manual sphygmomanometers, random-zero sphygmomanometers, and automated digital blood pressure monitors.\n",
  "encoded_values": [],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C2183311"
    }
  ],
  "harmonization_units": [
    {
      "name": "Amish",
      "component_study_variables": ["phs000956.v2.pht005002.v1.phv00252976.v1", "phs000956.v2.pht005002.v1.phv00252995.v1", "phs000956.v2.pht005002.v1.phv00252996.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- phen_list$source_data$pht005002\n  # Substitute the winsorized age value of '90+' to a numeric value 90.\n  ind <- dataset$age_baseline == \"90+\"\n  dataset$age_baseline[ind] <- \"90\"\n  # Rename variables.\n  dataset <- transmute(dataset,\n                       topmed_subject_id,\n                       bp_systolic = as.numeric(sbp_baseline),\n                       bp_diastolic = as.numeric(dbp_baseline),\n                       age = as.numeric(age_baseline)) %>%\n  # Subset to observations where systolic BP is greater than or equal to diastolic BP.\n             filter(bp_systolic >= bp_diastolic) %>%\n  # Select the output variables and remove NAs.\n             select(-bp_systolic) %>%\n             na.omit()\n  return(dataset)\n}\n"
    },
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v4.pht004063.v2.phv00204712.v1", "phs000280.v4.pht004192.v2.phv00210284.v1", "phs000280.v4.pht004192.v2.phv00210285.v1", "phs000280.v4.pht004192.v2.phv00210286.v1", "phs000280.v4.pht004192.v2.phv00210287.v1", "phs000280.v4.pht004192.v2.phv00210288.v1", "phs000280.v4.pht004192.v2.phv00210289.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Select phenotype dataset.\n  dataset <- plyr::join_all(phen_list$source_data)\n\n  # Change \"NA\" to NA.\n  dataset$SBPA15[dataset$SBPA15 %in% 'NA'] <- NA\n  dataset$SBPA18[dataset$SBPA18 %in% 'NA'] <- NA\n  dataset$SBPA16[dataset$SBPA16 %in% 'NA'] <- NA\n  dataset$SBPA19[dataset$SBPA19 %in% 'NA'] <- NA\n  dataset$SBPA17[dataset$SBPA17 %in% 'NA'] <- NA\n  dataset$SBPA20[dataset$SBPA20 %in% 'NA'] <- NA\n  dataset$V1AGE01[dataset$V1AGE01 %in% 'NA'] <- NA\n\n  dataset$SBPA15[dataset$SBPA15 %in% 'A'] <- NA\n  dataset$SBPA18[dataset$SBPA18 %in% 'A'] <- NA\n  dataset$SBPA16[dataset$SBPA16 %in% 'A'] <- NA\n  dataset$SBPA19[dataset$SBPA19 %in% 'A'] <- NA\n  dataset$SBPA17[dataset$SBPA17 %in% 'A'] <- NA\n  dataset$SBPA20[dataset$SBPA20 %in% 'A'] <- NA\n  dataset$V1AGE01[dataset$V1AGE01 %in% 'A'] <- NA\n\n  # Rename variables and convert to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric) %>%\n             rename(sbp_2 = SBPA15,\n                    sbp_3 = SBPA18,\n                    dbp_2 = SBPA16,\n                    dbp_3 = SBPA19,\n                    zero_2 = SBPA17,\n                    zero_3 = SBPA20,\n                    age = V1AGE01)\n\n  # Use Random zero correction for BP values.\n  dataset$dbp_2_RZ <- dataset$dbp_2 - dataset$zero_2\n  dataset$dbp_3_RZ <- dataset$dbp_3 - dataset$zero_3\n\n  dataset$sbp_2_RZ <- dataset$sbp_2 - dataset$zero_2\n  dataset$sbp_3_RZ <- dataset$sbp_3 - dataset$zero_3\n\n  # Check SBP is greater than or equal to DBP.\n  dataset <- mutate(dataset, sbp_2_RZ = ifelse(sbp_2_RZ >= dbp_2_RZ, sbp_2_RZ, NA))\n  dataset <- mutate(dataset, sbp_3_RZ = ifelse(sbp_3_RZ >= dbp_3_RZ, sbp_3_RZ, NA))\n  dataset <- mutate(dataset, dbp_2_RZ = ifelse(sbp_2_RZ >= dbp_2_RZ, dbp_2_RZ, NA))\n  dataset <- mutate(dataset, dbp_3_RZ = ifelse(sbp_3_RZ >= dbp_3_RZ, dbp_3_RZ, NA))\n\n  # Subset R-Z corrected DBP.\n  dataset_RZ <- dataset %>%\n                select(topmed_subject_id, dbp_2_RZ, dbp_3_RZ)\n\n  # Take the mean of DBP\n  vars <- c(\"dbp_2_RZ\", \"dbp_3_RZ\")\n  dataset$bp_diastolic <- rowMeans(dataset_RZ[, vars], na.rm = TRUE)\n\n  # Exclude rows with NAs.\n  dataset <- dataset %>%\n             select(topmed_subject_id, age, bp_diastolic) %>%\n             na.omit()\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "CARDIA",
      "component_study_variables": ["phs000285.v3.pht001560.v2.phv00112481.v2", "phs000285.v3.pht001560.v2.phv00112482.v2", "phs000285.v3.pht001560.v2.phv00112483.v2", "phs000285.v3.pht001560.v2.phv00112484.v2", "phs000285.v3.pht001560.v2.phv00112487.v2", "phs000285.v3.pht001560.v2.phv00112488.v2", "phs000285.v3.pht001560.v2.phv00112489.v2", "phs000285.v3.pht001560.v2.phv00112490.v2", "phs000285.v3.pht001645.v2.phv00115119.v2"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- inner_join(phen_list$source_data$pht001560,\n                        phen_list$source_data$pht001645,\n                        by = \"topmed_subject_id\")\n\n  # Substitute the value of 'M' to missing.\n  dataset$A02R2S[dataset$A02R2S %in% 'M'] <- NA\n  dataset$A02RZ2S[dataset$A02RZ2S %in% 'M'] <- NA\n  dataset$A02R2D[dataset$A02R2D %in% 'M'] <- NA\n  dataset$A02RZ2D[dataset$A02RZ2D %in% 'M'] <- NA\n  dataset$A02R3S[dataset$A02R3S %in% 'M'] <- NA\n  dataset$A02RZ3S[dataset$A02RZ3S %in% 'M'] <- NA\n  dataset$A02R3D[dataset$A02R3D %in% 'M'] <- NA\n  dataset$A02RZ3D[dataset$A02RZ3D %in% 'M'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Calculate random-zero corrected BP readings.\n  dataset <- mutate(dataset,\n                    sbp2 = A02R2S - A02RZ2S,\n                    dbp2 = A02R2D - A02RZ2D,\n                    sbp3 = A02R3S - A02RZ3S,\n                    dbp3 = A02R3D - A02RZ3D)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset,\n                    dbp2 = ifelse(sbp2 >= dbp2, dbp2, NA),\n                    dbp3 = ifelse(sbp3 >= dbp3, dbp3, NA))\n\n  # Calculate the average diastolic BP.\n  dataset$bp_diastolic <- rowMeans(dataset[, c(\"dbp2\", \"dbp3\")], na.rm = TRUE)\n\n  # Rename and select the output variables.\n  dataset <- rename(dataset, age = EXAMAGE) %>%\n             select(topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "CFS",
      "component_study_variables": ["phs000284.v1.pht001902.v1.phv00122012.v1", "phs000284.v1.pht001902.v1.phv00122015.v1", "phs000284.v1.pht001902.v1.phv00123001.v1", "phs000284.v1.pht001902.v1.phv00123002.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  dataset_tmp <- phen_list$source_data$pht001902 %>%\n\n  # Convert from character to numeric.\n                 mutate_if(is.character, as.numeric) %>%\n\n  # Filter for baseline visit only.\n                 filter(visit == 5) %>%\n\n  # Check for inconsistencies between systolic and diastolic values.\n                 filter(sbp >= dbp)\n\n  # Create dataset.\n  dataset <- dataset_tmp %>%\n             select(topmed_subject_id, age, bp_diastolic = dbp) %>%\n             na.omit()\n\n  return(dataset)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100435.v1", "phs000287.v6.pht001452.v1.phv00100436.v1", "phs000287.v6.pht001452.v1.phv00100487.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  dataset <- phen_list$source_data$pht001452 %>%\n\n  # Convert from character to numeric\n             mutate_if(is.character, as.numeric) %>%\n\n  # Check for inconsistencies between systolic and diastolic values\n             filter(AVZMSYS >= AVZMDIA) %>%\n\n  # Select diastolic blood pressure\n             select(topmed_subject_id, AGEBL, AVZMDIA) %>%\n\n  # Rename variables\n             rename(age = AGEBL, bp_diastolic = AVZMDIA) %>%\n\n  # Remove NAs\n             na.omit()\n\n  return(dataset)\n\n}\n"
    },
    {
      "name": "COPDGene",
      "component_study_variables": ["phs000179.v5.pht002239.v4.phv00159583.v4", "phs000179.v5.pht002239.v4.phv00159590.v4", "phs000179.v5.pht002239.v4.phv00159836.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- phen_list$source_data$pht002239\n\n  # Substitute the value of 'NA' to missing.\n  dataset$sysBP[dataset$sysBP %in% 'NA'] <- NA\n  dataset$diasBP[dataset$diasBP %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset, bp_diastolic = ifelse(sysBP >= diasBP, diasBP, NA))\n\n  # Rename and select the output variables.\n  dataset <- rename(dataset, age = Age_Enroll) %>%\n             select(topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Gen3_NOS_Omni2",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht006026.v1.phv00277034.v1", "phs000007.v29.pht006026.v1.phv00277045.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  dataset <- inner_join(phen_list$source_data$pht006026,\n                        phen_list$source_data$pht003099,\n                        by = \"topmed_subject_id\") %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric) %>%\n\n    # Check SBP >= DBP.\n    filter(SBP1 >= DBP1) %>%\n\n    # Rename variables.\n    rename(bp_diastolic = DBP1, age = age1) %>%\n\n    # Select relevant columns for harmonized dataset.\n    select(topmed_subject_id, age, bp_diastolic) %>%\n\n    # Remove NAs.\n    na.omit()\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Offspring",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht006027.v1.phv00277137.v1", "phs000007.v29.pht006027.v1.phv00277185.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  dataset <- inner_join(phen_list$source_data$pht006027,\n                        phen_list$source_data$pht003099,\n                        by = \"topmed_subject_id\") %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric) %>%\n\n    # Check SBP >= DBP.\n    filter(SBP1 >= DBP1) %>%\n\n    # Rename variables.\n    rename(bp_diastolic = DBP1, age = age1) %>%\n\n    # Select relevant columns for harmonized dataset.\n    select(topmed_subject_id, age, bp_diastolic) %>%\n\n    # Remove NAs.\n    na.omit()\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Omni1",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht004813.v1.phv00250561.v1", "phs000007.v29.pht004813.v1.phv00250562.v1", "phs000007.v29.pht004813.v1.phv00250652.v1", "phs000007.v29.pht004813.v1.phv00250653.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  dataset <- plyr::join_all(phen_list$source_data) %>%\n\n    # Rename variables.\n    rename(sbp_1 = e485, dbp_1 = e486, sbp_2 = e581, dbp_2 = e582, age = age1) %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric)\n\n  # Filter for values in which sbp is greater than or equal to dbp.\n  dataset <- mutate(dataset, sbp_1 = ifelse(sbp_1 >= dbp_1, sbp_1, NA))\n  dataset <- mutate(dataset, sbp_2 = ifelse(sbp_2 >= dbp_2, sbp_2, NA))\n  dataset <- mutate(dataset, dbp_1 = ifelse(sbp_1 >= dbp_1, dbp_1, NA))\n  dataset <- mutate(dataset, dbp_2 = ifelse(sbp_2 >= dbp_2, dbp_2, NA))\n\n  # Subset DBP values.\n  dataset_2 <- dataset %>%\n    select(topmed_subject_id, dbp_1, dbp_2)\n\n  # Take the mean of DBP\n  vars <- c(\"dbp_1\", \"dbp_2\")\n  dataset$bp_diastolic <- rowMeans(dataset_2[, vars], na.rm = TRUE)\n\n  # Select columns for harmonization dataset.\n  dataset <- select(dataset, topmed_subject_id, age, bp_diastolic)\n\n  # Remove NAs\n  dataset <- na.omit(dataset)\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Original",
      "component_study_variables": ["phs000007.v29.pht000009.v2.phv00000719.v1", "phs000007.v29.pht000009.v2.phv00000720.v1", "phs000007.v29.pht000009.v2.phv00000721.v1", "phs000007.v29.pht000009.v2.phv00000722.v1", "phs000007.v29.pht003099.v4.phv00177936.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  dataset <- plyr::join_all(phen_list$source_data) %>%\n\n    # Rename variables.\n    rename(sbp_1 = MF264, dbp_1 = MF265, sbp_2 = MF266, dbp_2 = MF267, age = age4) %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric)\n\n  # Filter for values in which sbp is greater than or equal to dbp.\n  dataset <- mutate(dataset, sbp_1 = ifelse(sbp_1 >= dbp_1, sbp_1, NA))\n  dataset <- mutate(dataset, sbp_2 = ifelse(sbp_2 >= dbp_2, sbp_2, NA))\n  dataset <- mutate(dataset, dbp_1 = ifelse(sbp_1 >= dbp_1, dbp_1, NA))\n  dataset <- mutate(dataset, dbp_2 = ifelse(sbp_2 >= dbp_2, dbp_2, NA))\n\n  # Subset DBP values.\n  dataset_2 <- dataset %>%\n    select(topmed_subject_id, dbp_1, dbp_2)\n\n  # Take the mean of DBP\n  vars <- c(\"dbp_1\", \"dbp_2\")\n  dataset$bp_diastolic <- rowMeans(dataset_2[, vars], na.rm = TRUE)\n\n  # Select columns for harmonization dataset.\n  dataset <- select(dataset, topmed_subject_id, age, bp_diastolic)\n\n  # Remove NAs\n  dataset <- na.omit(dataset)\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "GENOA",
      "component_study_variables": ["phs001238.v1.pht006039.v1.phv00277507.v1", "phs001238.v1.pht006039.v1.phv00277520.v1", "phs001238.v1.pht006039.v1.phv00277521.v1", "phs001238.v1.pht006039.v1.phv00277522.v1", "phs001238.v1.pht006039.v1.phv00277523.v1", "phs001238.v1.pht006653.v1.phv00307788.v1", "phs001238.v1.pht006653.v1.phv00307801.v1", "phs001238.v1.pht006653.v1.phv00307802.v1", "phs001238.v1.pht006653.v1.phv00307803.v1", "phs001238.v1.pht006653.v1.phv00307804.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- union(phen_list$source_data$pht006039, phen_list$source_data$pht006653)\n\n  # Substitute the value of 'NA' to missing.\n  dataset$RAND_SYS2[dataset$RAND_SYS2 %in% 'NA'] <- NA\n  dataset$RAND_DIA2[dataset$RAND_DIA2 %in% 'NA'] <- NA\n  dataset$RAND_SYS3[dataset$RAND_SYS3 %in% 'NA'] <- NA\n  dataset$RAND_DIA3[dataset$RAND_DIA3 %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset,\n                    dbp2 = ifelse(RAND_SYS2 >= RAND_DIA2, RAND_DIA2, NA),\n                    dbp3 = ifelse(RAND_SYS3 >= RAND_DIA3, RAND_DIA3, NA))\n\n  # Calculate the average systolic BP.\n  dataset$bp_diastolic <- rowMeans(dataset[, c(\"dbp2\", \"dbp3\")], na.rm = TRUE)\n\n  # Rename and select the output variables.\n  dataset <- rename(dataset, age = AGE) %>%\n             select(topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "GOLDN",
      "component_study_variables": ["phs000741.v2.pht003918.v2.phv00202104.v2", "phs000741.v2.pht003918.v2.phv00259052.v1", "phs000741.v2.pht003918.v2.phv00259053.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- phen_list$source_data$pht003918\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset, bp_diastolic = ifelse(SBP >= DBP, DBP, NA))\n\n  # Select the output variables.\n  dataset <- select(dataset, topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "HCHS_SOL",
      "component_study_variables": ["phs000810.v1.pht004715.v1.phv00226251.v1", "phs000810.v1.pht004715.v1.phv00226390.v1", "phs000810.v1.pht004715.v1.phv00226391.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Select phenotype dataset.\n  dataset <- phen_list$source_data$pht004715 %>%\n  # Convert character variables to numeric.\n             mutate_if(is.character, as.numeric) %>%\n  # Subset to observations where SBP is greater than or equal to DBP.\n             filter(SBPA5 >= SBPA6) %>%\n  # Rename variables.\n             select(topmed_subject_id, bp_diastolic = SBPA6, age = AGE) %>%\n  # Exclude rows with NAs.\n             na.omit()\n  return(dataset)\n}\n"
    },
    {
      "name": "JHS",
      "component_study_variables": ["phs000286.v5.pht001949.v1.phv00126009.v1", "phs000286.v5.pht001974.v1.phv00128370.v1", "phs000286.v5.pht001974.v1.phv00128371.v1", "phs000286.v5.pht001974.v1.phv00128372.v1", "phs000286.v5.pht001974.v1.phv00128373.v1", "phs000286.v5.pht001974.v1.phv00128374.v1", "phs000286.v5.pht001974.v1.phv00128375.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- inner_join(phen_list$source_data$pht001949,\n                        phen_list$source_data$pht001974,\n                        by = \"topmed_subject_id\")\n\n  # Substitute the value of 'NA' to missing.\n  dataset$SBPA13[dataset$SBPA13 %in% 'NA'] <- NA\n  dataset$SBPA14[dataset$SBPA14 %in% 'NA'] <- NA\n  dataset$SBPA15[dataset$SBPA15 %in% 'NA'] <- NA\n  dataset$SBPA16[dataset$SBPA16 %in% 'NA'] <- NA\n  dataset$SBPA17[dataset$SBPA17 %in% 'NA'] <- NA\n  dataset$SBPA18[dataset$SBPA18 %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Calculate random-zero corrected BP readings.\n  dataset <- mutate(dataset,\n                    sbp1 = SBPA13 - SBPA15,\n                    dbp1 = SBPA14 - SBPA15,\n                    sbp2 = SBPA16 - SBPA18,\n                    dbp2 = SBPA17 - SBPA18)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset,\n                    dbp1 = ifelse(sbp1 >= dbp1, dbp1, NA),\n                    dbp2 = ifelse(sbp2 >= dbp2, dbp2, NA))\n\n  # Calculate the average diastolic BP.\n  dataset$bp_diastolic <- rowMeans(dataset[, c(\"dbp1\", \"dbp2\")], na.rm = TRUE)\n\n  # Rename and select the output variables.\n  dataset <- rename(dataset, age = AGE01) %>%\n             select(topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "MESA",
      "component_study_variables": ["phs000209.v13.pht001111.v4.phv00082639.v2", "phs000209.v13.pht001111.v4.phv00083403.v1", "phs000209.v13.pht001111.v4.phv00083404.v1", "phs000209.v13.pht001111.v4.phv00083406.v1", "phs000209.v13.pht001111.v4.phv00083407.v1", "phs000209.v13.pht001116.v10.phv00084442.v3", "phs000209.v13.pht001116.v10.phv00085735.v2", "phs000209.v13.pht001116.v10.phv00085736.v2", "phs000209.v13.pht001116.v10.phv00085737.v2", "phs000209.v13.pht001116.v10.phv00085738.v2", "phs000209.v13.pht001121.v3.phv00087071.v1", "phs000209.v13.pht001121.v3.phv00087509.v1", "phs000209.v13.pht001121.v3.phv00087510.v1", "phs000209.v13.pht001121.v3.phv00087512.v1", "phs000209.v13.pht001121.v3.phv00087513.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n\n  # Merge pht001111 and pht001116.\n  dataset <- rbind(phen_list$source_data$pht001111, phen_list$source_data$pht001116)\n\n  # Rename variable names for pht001121.\n  dataset_21 <- phen_list$source_data$pht001121 %>%\n                rename(s2bp1 = s2bpf,\n                       d2bp1 = d2bpf,\n                       s3bp1 = s3bpf,\n                       d3bp1 = d3bpf,\n                       age1c = agefc)\n\n  # Merge pht001121 with previously merged dataset.\n  dataset <- rbind(dataset, dataset_21) %>%\n\n    # Rename variables.\n    rename(sbp_2 = s2bp1, dbp_2 = d2bp1, sbp_3 = s3bp1, dbp_3 = d3bp1, age = age1c) %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric)\n\n  # Filter for values in which sbp is greater than or equal to dbp.\n  dataset <- mutate(dataset, sbp_2 = ifelse(sbp_2 > dbp_2, sbp_2, NA))\n  dataset <- mutate(dataset, sbp_3 = ifelse(sbp_3 > dbp_3, sbp_3, NA))\n  dataset <- mutate(dataset, dbp_2 = ifelse(sbp_2 > dbp_2, dbp_2, NA))\n  dataset <- mutate(dataset, dbp_3 = ifelse(sbp_3 > dbp_3, dbp_3, NA))\n\n  # Subset DBP values.\n  dataset_2 <- dataset %>%\n    select(topmed_subject_id, dbp_2, dbp_3)\n\n  # Take the mean of DBP\n  vars <- c(\"dbp_2\", \"dbp_3\")\n  dataset$bp_diastolic <- rowMeans(dataset_2[, vars], na.rm = TRUE)\n\n  # Select columns for harmonization dataset.\n  dataset <- select(dataset, topmed_subject_id, age, bp_diastolic)\n\n  # Remove NAs\n  dataset <- na.omit(dataset)\n\n  # Return harmonized dataset.\n  return(dataset)\n}\n"
    },
    {
      "name": "SAS",
      "component_study_variables": ["phs000914.v1.pht005253.v1.phv00258680.v1", "phs000914.v1.pht005253.v1.phv00258701.v1", "phs000914.v1.pht005253.v1.phv00258703.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get dataset.\n  dataset <- phen_list$source_data$pht005253 %>%\n  # Rename variables.\n             transmute(topmed_subject_id,\n                       age = Dec_Age,\n                       bp_diastolic = na_if(Diastolic_BP, \"NA\"),\n                       bp_systolic = na_if(Systolic_BP, \"NA\")) %>%\n             mutate_at(vars(age, bp_diastolic, bp_systolic), funs(as.numeric)) %>%\n  # Subset to observations where systolic BP is greater than or equal to diastolic BP.\n             filter(bp_systolic >= bp_diastolic) %>%\n  # Select the output variables and remove NAs.\n             select(-bp_systolic) %>%\n             na.omit()\n  return(dataset)\n}\n"
    },
    {
      "name": "WHI",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078436.v6", "phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht001019.v6.phv00079850.v6", "phs000200.v11.pht001019.v6.phv00079852.v6", "phs000200.v11.pht001019.v6.phv00079854.v6", "phs000200.v11.pht001019.v6.phv00079855.v6", "phs000200.v11.pht001019.v6.phv00079856.v6", "phs000200.v11.pht001019.v6.phv00079857.v6"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Get blood pressure dataset.\n  dataset <- phen_list$source_data$pht001019\n\n  # Subset to baseline visit.\n  dataset <- filter(dataset, F80VTYP == 1)\n\n  # Substitute the value of 'NA' to missing.\n  dataset$SYSTBP1[dataset$SYSTBP1 %in% 'NA'] <- NA\n  dataset$DIASBP1[dataset$DIASBP1 %in% 'NA'] <- NA\n  dataset$SYSTBP2[dataset$SYSTBP2 %in% 'NA'] <- NA\n  dataset$DIASBP2[dataset$DIASBP2 %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Set diastolic BP to NA when systolic BP is less than diastolic BP from the same reading\n  # or when systolic BP from the same reading is NA.\n  dataset <- mutate(dataset,\n                    dbp1 = ifelse(SYSTBP1 >= DIASBP1, DIASBP1, NA),\n                    dbp2 = ifelse(SYSTBP2 >= DIASBP2, DIASBP2, NA))\n\n  # Calculate the average diastolic BP.\n  dataset$bp_diastolic <- rowMeans(dataset[, c(\"dbp1\", \"dbp2\")], na.rm = TRUE)\n\n  # Select the blood pressure variables.\n  dataset <- select(dataset, topmed_subject_id, bp_diastolic, F80DAYS)\n\n  # Get age dataset.\n  dataset_age <- phen_list$source_data$pht000998\n\n  # Substitute the value of 'NA' to missing.\n  dataset_age$F2DAYS[dataset_age$F2DAYS %in% 'NA'] <- NA\n  dataset_age$AGE[dataset_age$AGE %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset_age <- mutate_if(dataset_age, is.character, as.numeric)\n\n  # Join blood pressure dataset and age dataset.\n  dataset <- inner_join(dataset, dataset_age, by = \"topmed_subject_id\")\n\n  # Calculate age at blood pressure measurement.\n  dataset <- mutate(dataset,\n                    age = ifelse(F2DAYS > 0,\n                                 AGE + F80DAYS / 365.25,\n                                 AGE + (abs(F2DAYS) + F80DAYS) / 365.25))\n\n  # Select the output variables.\n  dataset <- select(dataset, topmed_subject_id, bp_diastolic, age)\n\n  # Remove records with NAs from dataset.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    }
  ]
}
