{
  "name": "vte_prior_history_1",
  "phenotype_concept": "vte_prior_history",
  "concept_variant": 1,
  "description": "An indicator of whether a subject had a venous thromboembolism (VTE) event prior to the start of the medical review process (including self-reported events).",
  "version": 1,
  "dcc_harmonization_id": 120,
  "data_type": "encoded",
  "measurement_units": null,
  "has_age_variable": true,
  "date_harmonized": "2018-11-01 07:54:04",
  "dcc_harmonization_comments": "Venous thromboembolism (VTE) events include deep vein thrombosis (DVT) or pulmonary embolism (PE). If data included variable(s) distinguishing the type, information about the first event of either type was used. \n\nThe main task in creating this variable was to determine whether or not a VTE event occurred before the start of adjudication or the medical review process. For some studies, this information was obtained through self-report (questionnaire). For these studies, the corresponding age variable was chosen as the age at which the questionnaire was administered. The harmonized variable and corresponding age were set to missing if a subject did not answer the relevant questions.\n\nFor some studies where adjudication/medical review occurred at enrollment into the study, the dataset contained a variable indicating prior event or not. The corresponding age variable was recorded as the age at enrollment.\n\nFor other studies, time to event information was provided in the form of days from some reference point (usually visit 1 or enrollment in the study) to the event. For these studies, if an event was recorded, the number of days from the reference point to the event was compared with the number of days from the reference point to the the start of adjudication or review. If the event was determined to have happened before the start of adjudication or review, the subject  was classified as having a prior event and the corresponding age variable was assigned the age at event, calculated using the age at the reference point plus the time to the event. If the event was determined to have happened after the start of adjudication or review, the subject was classified as not having a prior event and the corresponding age variable was assigned as the age at the start of adjudication/medical review. If there was no event recorded, the subject was classified as not having a prior event and the corresponding age variable was assigned as the age at the start of adjudication/medical review.\n\n### Study-specific comments\n\n#### WHI\n##### HRT (Hormone replacement therapy)\n\nMedical review (adjudication) began at enrollment. Prior history information was self-report, obtained from a questionnaire at screening. \n\n##### MRC-nonHRT (Medical Records cohort but not enrolled in HRT)\n\nMedical review (adjudication) began at the start of Extension 2. Prior event history was determined from a combination of self-report at screening and time to event information for recorded events during the study but before the start of adjudication.\n\n#### FHS\n##### Generation 3, New Offspring Spouse, Omni1 and Omni2\n\nAdjudication started at Exam 1. Time to event data was provided and prior events were determined by days to event being negative.\n\n##### Original and Offspring \n \nVTE event adjudication started January 1, 1995. We use the term \"pre-specified exam\" to refer to the exam for a given subcohort that was closest to the start of adjudication. The pre-specified exam was Exam 24 for the Original subcohort and Exam 6 for the Offspring subcohort.\n\nFor these subcohorts, a recorded event could be classified as prior, not prior, or indeterminate. If a subject attended the pre-specified exam, then prior or not prior could be readily established. For some subjects with recorded events who did not attend the pre-specified exam, it could not be determined if the recorded event was before or after the start of adjudication. For a subject who did not attend the pre-specified exam, a combination of the following information was used to classify the event as prior, not prior, or indeterminate: days from Exam 1 to event, days from Exam 1 to the exam immediately preceding the pre-specified exam, days from Exam 1 to the exam immediately following the pre-specified exam, and the minimum and maximum number of days from Exam 1 to the pre-specified exam calculated over all subjects in the subcohort who attended the pre-specified exam. If a subject's recorded event was classified as indeterminate, the harmonized variable and corresponding age were set to missing.\n\n##### CHS \n\nAdjudication started at the baseline exam for each of the *_CHS_* subcohorts. *_CHS_* dbGaP data included a variable indicating self-report of prior VTE event. Age at the respective baseline exams was used for the corresponding age variable.\n\n##### ARIC \n\nAdjudication started at Visit 1. Study investigators confirmed that subjects included in the VTE sub-study had no history of VTE.\n\n##### HVH \n\nThis is a case-control study. The dbGaP dataset included variables indicating prior VTE and appropriate age. \n\n##### Mayo_VTE \n\nThis is a case-control study. There was no information relevant to prior history so values for this variable and the corresponding age variable were assigned as missing.\n\n",
  "encoded_values": [
    {
      "code": "0",
      "value": "did not have prior VTE event"
    },
    {
      "code": "1",
      "value": "had prior VTE event"
    }
  ],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C4540929"
    }
  ],
  "harmonization_units": [
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v4.pht004063.v2.phv00204712.v1", "phs000280.v4.pht006485.v1.phv00298125.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # prior VTE history for ARIC\n  # All ARIC cases were incident (i.e. no previous history)\n  # follow-up started at visit1 so age = age at visit1\n\n  # get dataset with age at visit 1 information\n  # get dataset including the subjects followed for VTE\n  # join to keep subjects followed for VTE\n\n  dat1 <- phen_list$source_data$pht004063\n  dat2 <- phen_list$source_data$pht006485\n  dat <- left_join(dat2, dat1)\n\n  # assign 0 to prior history indicator\n  # assign age as age at visit 1\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(vte_prior_history = \"0\") %>%\n          mutate(age = V1AGE01) %>%\n          filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n          select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100487.v1", "phs000287.v6.pht005981.v1.phv00273567.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # prior VTE history for CHS\n  # some self-report of DVT or PE at baseline\n\n  # get dataset with age at CHS baseline information\n  # get dataset including the subjects followed for VTE\n  # join to keep subjects followed for VTE\n\n  dat1 <- phen_list$source_data$pht001452\n  dat2 <- phen_list$source_data$pht005981\n  dat <- left_join(dat2, dat1)\n\n  # use self-report indicator: 0 (no), 1 (yes), or missing code\n  # follow-up started at CHS baseline so age = age at CHS baseline\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(vte_prior_history = as.character(vtpehx01)) %>%\n          mutate(age = AGEBL) %>%\n          filter(is.element(vte_prior_history, c(0, 1)) & !is.na(age)) %>%\n          select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "FHS_G3NOSOm12",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # prior history for FHS NOS, Gen3, Omni1, and Omni2\n  # follow-up started at visit1 so\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: NOS = 2, Gen3 = 3, Omni1 = 7, Omni2 = 72\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% c(2, 3, 7, 72))\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # change age and day variables to numeric\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n\n  # prior history indicator = 1 if EDATE1 < 0 (i.e. before visit 1)\n  dat <- dat %>%\n         mutate(vte_prior_history = ifelse(EVENT1 %in% c(1, 2, 3) & EDATE1 < 0, \"1\", \"0\"))\n\n  #  age = age at visit 1 if no previous event\n  #  otherwise age = age visit 1 + days to visit1/365.25 (days negative)\n\n  dat <- dat %>%\n         mutate(age = ifelse(vte_prior_history %in% 1, age1 + EDATE1 / 365.25, age1)) %>%\n         filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n         select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "FHS_Offspring",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00177988.v4", "phs000007.v29.pht003099.v4.phv00177989.v4", "phs000007.v29.pht003099.v4.phv00177990.v4", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 119,
          "name": "vte_followup_start_age_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # prior history for FHS Offspring\n  # follow-up started at visit6\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: Offspring = 1\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% 1)\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # get dataset with harmonized vte_followup_start_age\n  dat3 <- phen_list$harmonized_data$vte_followup_start_age_1\n  dat <- left_join(dat, dat3)\n\n  # change age and day variables to numeric\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n  dat$date6 <- as.numeric(dat$date6)\n  dat$date5 <- as.numeric(dat$date5)\n  dat$date7 <- as.numeric(dat$date7)\n  dat$vte_followup_start_age_1 <- as.numeric(dat$vte_followup_start_age_1)\n\n  # prior history indicator = 1 if EDATE1 is before visit6\n  # can use date6 if subject attended visit6\n\n  # if didn't attend visit6:\n  #   will need to decide if event date is after adjudication start\n  # find range of date6 for subjects who attended visit6\n  r1 <- min(dat$date6, na.rm = TRUE)\n  r2 <- max(dat$date6, na.rm = TRUE)\n\n  # if event days to visit1 < r1, can claim is prior event\n  # if event days to visit1 > r2, can claim event is after adjudication start\n  # since ranges of consecutive visits can overlap:\n  #   if subject attended visit7 and event days >= date7: after adjuciation start\n  #   if subject attended visit 5 and event days <= date5: prior event\n  # otherwise there is uncertainty so assign as missing\n\n  dat$vte_prior_history <- 0\n  aa <- dat$EVENT1 %in% c(1, 2, 3) # event recorded\n\n  # if attended visit6\n  a <- aa & !is.na(dat$date6) & dat$EDATE1 < dat$date6\n  dat$vte_prior_history[a] <- 1\n\n  # if did not attend visit6 and event before min days to visit6\n  b <- aa & is.na(dat$date6) & dat$EDATE1 < r1\n  dat$vte_prior_history[b] <- 1\n\n  # if did not attend visit6 but did attend visit5 and event before visit5\n  f <- aa & is.na(dat$date6) & !is.na(dat$date5) & dat$date5 >= dat$EDATE1\n  dat$vte_prior_history[f] <- 1\n\n  # if uncertainty about whether event is after adjucation start, assign NA\n  g <- aa & is.na(dat$date6) & !(dat$vte_prior_history %in% 1) &\n       dat$EDATE1 >= r1 & dat$EDATE1 <= r2\n  dat$vte_prior_history[g] <- NA\n\n  # check visit 7 to possibly clarify some of the missing\n  h <- aa & is.na(dat$date6) & !is.na(dat$date7) & dat$date7 <= dat$EDATE1\n  dat$vte_prior_history[h] <- 0\n\n  #  age = age at start of followup/adjudication if no prior event\n  #  if event, age = age visit 1 + days event to visit1/365.25\n  #  will not keep missing\n\n  dat <- dat %>%\n         mutate(age = ifelse(vte_prior_history %in% 1, age1 + EDATE1 / 365.25, NA)) %>%\n         mutate(age = ifelse(vte_prior_history %in% 0, vte_followup_start_age_1, age)) %>%\n         filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n         mutate(vte_prior_history = as.character(vte_prior_history)) %>%\n         select(topmed_subject_id, vte_prior_history, age)\n\n    return(dat)\n}\n"
    },
    {
      "name": "FHS_Original",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00178006.v4", "phs000007.v29.pht003099.v4.phv00178007.v4", "phs000007.v29.pht003099.v4.phv00178008.v4", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 119,
          "name": "vte_followup_start_age_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # prior history for FHS Original\n  # follow-up started at visit24\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: Original = 0\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% 0)\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # get dataset with harmonized vte_followup_start_age\n  dat3 <- phen_list$harmonized_data$vte_followup_start_age_1\n  dat <- left_join(dat, dat3)\n\n  # change age and day variables to numeric\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n  dat$date24 <- as.numeric(dat$date24)\n  dat$date23 <- as.numeric(dat$date23)\n  dat$date25 <- as.numeric(dat$date25)\n  dat$vte_followup_start_age_1 <- as.numeric(dat$vte_followup_start_age_1)\n\n  # prior history indicator = 1 if EDATE1 is after visit24\n  # can use date24 if subject attended visit24\n\n  # if didn't attend visit24:\n  #   will need to decide if event date is after adjudication start\n  # find range of date24 for subjects who attended visit24\n  r1 <- min(dat$date24, na.rm = TRUE)\n  r2 <- max(dat$date24, na.rm = TRUE)\n\n  # if event days to visit1 < r1, can claim is prior event\n  # if event days to visit1 > r2, can claim event is after adjudication start\n  # since ranges of consecutive visits can overlap:\n  #   if subject attended visit25 and event days >= date25: after adjuciation start\n  #   if subject attended visit 23 and event days <= date23: prior event\n  # otherwise there is uncertainty so assign as missing\n\n  dat$vte_prior_history <- 0 # start with assuming no prior history\n  aa <- dat$EVENT1 %in% c(1, 2, 3) # event recorded\n\n  # if attended visit24\n  a <- aa & !is.na(dat$date24) & dat$EDATE1 < dat$date24\n  dat$vte_prior_history[a] <- 1\n\n  # if did not attend visit24 and event before min days to visit24\n  b <- aa & is.na(dat$date24) & dat$EDATE1 < r1\n  dat$vte_prior_history[b] <- 1\n\n  # if did not attend visit24 but did attend visit23 and event before visit23\n  f <- aa & is.na(dat$date24) & !is.na(dat$date23) & dat$date23 >= dat$EDATE1\n  dat$vte_prior_history[f] <- 1\n\n  # if uncertainty about whether event is after adjucation start, assign NA\n  g <- aa & is.na(dat$date24) & !(dat$vte_prior_history %in% 1) &\n       dat$EDATE1 >= r1 & dat$EDATE1 <= r2\n  dat$vte_prior_history[g] <- NA\n\n  # check visit 25 to possibly clarify some of the missing\n  h <- aa & is.na(dat$date24) & !is.na(dat$date25) & dat$date25 <= dat$EDATE1\n  dat$vte_prior_history[h] <- 0\n\n  #  age = age at start of followup/adjudication if no prior event\n  #  if event, age = age visit 1 + days event to visit1/365.25\n  #  will not keep missing\n\n  dat <- dat %>%\n         mutate(age = ifelse(vte_prior_history %in% 1, age1 + EDATE1 / 365.25, NA)) %>%\n         mutate(age = ifelse(vte_prior_history %in% 0, vte_followup_start_age_1, age)) %>%\n         filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n         mutate(vte_prior_history = as.character(vte_prior_history)) %>%\n         select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "HVH",
      "component_study_variables": ["phs001013.v3.pht005311.v2.phv00259376.v2", "phs001013.v3.pht005311.v2.phv00259377.v2", "phs001013.v3.pht005311.v2.phv00259378.v2", "phs001013.v3.pht005311.v2.phv00259384.v2"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # VTE prior history for HVH\n\n  # get phenotype dataset\n  datt <- phen_list$source_data$pht005311\n\n  # choose VTE cases - manual says all are incident\n  dat1 <- datt %>% filter(ccs %in% 3)\n\n  # take out subjects identified as cases then choose controls from remaining\n  # necessary since controls at one time could have event to become case\n  dat2 <- anti_join(datt, dat1, by = \"topmed_subject_id\")\n\n    # choose controls from remaining\n  dat2 <- dat2 %>% filter(ccs %in% 0)\n\n  # some controls have duplicate entries\n  # arrange by index year in descending order and choose later year\n  dat3 <- dat2 %>% arrange(desc(indexy)) %>% group_by(topmed_subject_id) %>%\n               slice(1)\n\n  dat <- rbind(dat1, as.data.frame(dat3))\n\n  # create prior history indicator\n  # age: age in years at date of VT diagnosis (cases) or at selection (controls)\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(vte_prior_history = ifelse(priorvt %in% 1, 1, NA)) %>%\n          mutate(vte_prior_history = ifelse(priorvt %in% 0, 0, vte_prior_history)) %>%\n          filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n          mutate(vte_prior_history = as.character(vte_prior_history)) %>%\n          select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "WHI_HRT",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht000998.v6.phv00078472.v6", "phs000200.v11.pht000998.v6.phv00078475.v6", "phs000200.v11.pht001031.v6.phv00080426.v6"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # previous VTE history for WHI HRT participants\n  # self-report on Form F2 (screening)\n  # no further info so record age as age at screening\n\n  # get dataset with screening information\n  # get dataset with membership flags and select HRT participants\n  # combine datasets\n\n  dat1 <- phen_list$source_data$pht000998\n  dat2 <- phen_list$source_data$pht001031 %>% filter(HRTFLAG %in% 1)\n  dat <- left_join(dat2, dat1)\n\n   # define vte_prior_history = 1 if any self-report of DVT or PE\n   # vte_prior_history = 0 if answered 0 for both DVT and PE on Form 2\n   # otherwise keep as missing\n  dat <- dat %>% mutate(age = as.numeric(AGE)) %>%\n         mutate(vte_prior_history = ifelse(DVT %in% 1 | PE %in% 1, 1, NA)) %>%\n         mutate(vte_prior_history = ifelse(DVT %in% 0 & PE %in% 0, 0, vte_prior_history)) %>%\n         filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n         mutate(vte_prior_history = as.character(vte_prior_history)) %>%\n         select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "WHI_MRCnonHRT",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078436.v6", "phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht000998.v6.phv00078472.v6", "phs000200.v11.pht000998.v6.phv00078475.v6", "phs000200.v11.pht001031.v6.phv00080426.v6", "phs000200.v11.pht002770.v4.phv00170649.v4", "phs000200.v11.pht002770.v4.phv00170650.v4", "phs000200.v11.pht002770.v4.phv00170651.v4", "phs000200.v11.pht002770.v4.phv00170652.v4", "phs000200.v11.pht003395.v3.phv00192301.v3", "phs000200.v11.pht003395.v3.phv00192302.v3", "phs000200.v11.pht003407.v3.phv00193179.v3", "phs000200.v11.pht003407.v3.phv00193194.v3"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # previous history for WHI MRC non-HRT participants\n  # follow-up started at beginning of Extension 2\n\n  # get dataset with screening information\n  # AGE is measured at screening on form F2\n  # abs(F2DAYS) is days between screening and enrollment\n  # do not use F2DAYS when F2DAYS > 0\n  # age at enrollment = AGE + abs(F2DAYS)/365.25\n  dat1 <- phen_list$source_data$pht000998\n\n  # get datasets with membership flags and combine\n  dat2 <- phen_list$source_data$pht001031\n  dat3 <- phen_list$source_data$pht003395\n  datt <- full_join(dat3, dat2)\n\n  # select subjects in MRC but not in HRT\n  datt <- datt %>% filter(EXT2MRC %in% 1 & HRTFLAG %in% 0)\n\n  # combine with screening info\n  dat <- left_join(datt, dat1)\n\n  # change names for screening self-report for DVT or PE\n  dat <- dat %>% rename(F2DVT = DVT, F2PE = PE)\n\n  # there are three sources of previous history\n  # screening self-report, up to EXT2 self-report (FORM 33), event decision before start of Ext2\n  # screening self-report: use age = age at screening\n\n  # get datasets for self-report (up to Ext2) and for outcomes\n  f33 <- phen_list$source_data$pht002770\n  outc <- phen_list$source_data$pht003407\n\n  # combine\n  dt <- left_join(outc, f33)\n  datt <- left_join(dat, dt)\n\n  # change AGE, days to numeric variables\n  datt$AGE <- as.numeric(datt$AGE)\n  datt$F2DAYS <- as.numeric(datt$F2DAYS)\n  datt$F2DAYS[datt$F2DAYS > 0] <- 0   # correction\n  datt$F33DVTDY <- as.numeric(datt$F33DVTDY)\n  datt$F33PEDY <- as.numeric(datt$F33PEDY)\n  datt$DVTDY <- as.numeric(datt$DVTDY)\n  datt$PEDY <- as.numeric(datt$PEDY)\n  datt$EXT2DAYS <- as.numeric(datt$EXT2DAYS)\n\n  # create some intermediate variables flagging previous history from the three sources\n  datt <- datt %>% mutate(F2h = F2DVT %in% 1 | F2PE %in% 1) %>%\n          mutate(F33h = F33DVT %in% 1 | F33PE %in% 1)\n  se1 <- !is.na(datt$DVTDY) & !is.na(datt$EXT2DAYS) & datt$DVTDY < datt$EXT2DAYS\n  se2 <- !is.na(datt$PEDY) & !is.na(datt$EXT2DAYS) & datt$PEDY < datt$EXT2DAYS\n  datt$outch <- se1 | se2\n\n  # previous history indicator\n  datt <- datt %>% mutate(vte_prior_history = ifelse(F2h | F33h | outch, 1, NA))\n  sel <- datt$F2DVT %in% 0 & datt$F2PE %in% 0\n  sel <- sel & datt$F33DVT %in% 0 & datt$F33PE %in% 0 & !datt$outch\n  datt$vte_prior_history[sel] <- 0\n\n  datt$age <- NA\n  # for subjects with no indication of previous history, set age to start of followup\n  a <- datt$vte_prior_history %in% 0\n  datt$age[a] <- datt$AGE[a]  + (abs(datt$F2DAYS[a]) + datt$EXT2DAYS[a]) / 365.25\n\n  # if indicated previous history at screening, that is first date\n  b <- datt$F2h\n  datt$age[b] <- datt$AGE[b] # age at screening\n\n  # if no indication at F2 but self-report at F33:\n  # use time to event if given, else use start of Ext2\n  datt$days <- NA\n  c1 <- datt$F33h & !datt$F2h & (!is.na(datt$F33DVTDY) | !is.na(datt$F33PEDY))\n  c2 <- datt$F33h & !datt$F2h & is.na(datt$F33DVTDY) & is.na(datt$F33PEDY)\n  datt$days[c1] <- pmin(datt$F33DVTDY[c1], datt$F33PEDY[c1], na.rm = TRUE)\n  datt$days[c2] <- datt$EXT2DAYS[c2]\n\n  # if event before adjudication and no baseline self-report, find min days\n  d <- datt$outch & !datt$F2h\n  datt$days[d] <- pmin(datt$DVTDY[d], datt$PEDY[d], datt$days[d], na.rm = TRUE)\n\n  sel <- c1 | c2 | d\n  datt$age[sel] <- datt$AGE[sel] + (abs(datt$F2DAYS[sel]) + datt$days[sel]) / 365.25\n\n  # final selection\n  dat <- datt %>% filter(!is.na(vte_prior_history) & !is.na(age)) %>%\n         mutate(vte_prior_history = as.character(vte_prior_history)) %>%\n         select(topmed_subject_id, vte_prior_history, age)\n\n  return(dat)\n}\n"
    }
  ]
}
