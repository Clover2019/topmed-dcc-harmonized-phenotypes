{
  "name": "vte_case_status_1",
  "phenotype_concept": "vte_case_status",
  "concept_variant": 1,
  "description": "An indicator of whether a subject experienced a venous thromboembolism event (VTE) that was verified by adjudication or by medical professionals.",
  "version": 1,
  "dcc_harmonization_id": 121,
  "data_type": "encoded",
  "measurement_units": null,
  "has_age_variable": true,
  "date_harmonized": "2018-11-07 14:08:02",
  "dcc_harmonization_comments": "Venous thromboembolism (VTE) events include deep vein thrombosis (DVT) or pulmonary embolism (PE). If data included variable(s) distinguishing the type, information about the first event of either type was used. Throughout these comments, we refer to subjects that have experienced a verified VTE event as cases and to subjects that have not as controls.\n\nFor cohort studies (where subjects were enrolled and then followed for a period of time), any subject with a verified event who also had no evidence of prior events was classified as a case , with the exception of *_FHS_* Original and Offspring subcohorts. The case determination process for these subcohorts is explained below. Subjects with no events recorded and with no evidence of prior events were classified as controls as long as the time at censoring was after the start of adjudication/medical review. The harmonized variable was set to missing for subjects with no events recorded for which time at censoring was before or at the start of adjudication/medical review, or for any subject with evidence of prior events. \nFor case-control studies, case status was as given in the case status study component variable, with some additional criteria for *_HVH_*.\n\nThe cohort studies generally provided time-to-event data.  Time was the time to event for cases and time to censoring for controls, expressed in days from a reference point (usually visit 1 or enrollment).  The time data was used to compute the accompanying age variable for the case status harmonized variable.\n\n### Study-specific comments\n\n#### FHS\nCensoring time was obtained by using days from Exam 1 to last exam attended.\n\nVTE event adjudication started January 1, 1995. We use the term \"pre-specified exam\" to refer to the exam for a given subcohort that was closest to the start of adjudication. The pre-specified exam was Exam 24  for the Original subcohort and Exam 6 for the Offspring subcohort. For all other cohorts, Exam 1 was the pre-specified exam.\n\nConsider subjects for whom there was a recorded event and for whom there was no evidence of events prior to the start of adjudication. If a subject attended the pre-specified exam and the event occurred after the pre-specified exam, the subject was classified as a case. If a subject did not attend the pre-specified exam, the subject was classified as a case if the number of days to the event was greater than the number of days to the exam immediately following the pre-specified exam or if the number of days to the event was outside the range of the pre-specified exam for all subjects in that subcohort; otherwise the harmonized variable was assigned as missing.\n\n#### HVH\n\nFor this case-control study, the case-control study component variable identified three other conditions besides VTE ( myocardial infarction, atrial fibrillation, and stroke) and subjects identified as controls were free of any of these conditions at the time of initial inclusion in the study. Some subjects initially selected as controls could later be found to have a condition and were then also identified as a case for that condition with a later index date. \n\nAll subjects indicated as a case for VTE by the case-control component study variable were assigned case status; there were no prior events for these subjects nor multiple incident events. The corresponding age variable was assigned the given age at the VTE event.\n\nSubjects indicated as controls by the case-control study variable were assigned control status only if there was no entry indicating later case status for VTE. The corresponding age variable for these subjects was assigned the given age at the latest index date for which the subject was recorded as a control.\n\n#### Mayo_VTE\n\nFor cases, the corresponding age variable was assigned as the age at the VTE event. For controls (no VTE event), the corresponding age variable was assigned as the age at enrollment. \nSome subjects had age recorded as \">89\". For these subjects, age was harmonized as 90.\n\n### Adjudication or medical review process\n\nBelow are references to documentation for descriptions of the medical review process for the studies.\n\n##### FHS\n* dbGaP study accession: phs000007.v29\n* document name/document accession: Venous Thrombosis Review: Protocol / phd007074.1\n\n\n##### WHI\n* dbGaP study accession: phs000200.v11\n* document name/document accession:\n     * Section 1: Introduction to WHI outcomes / phd001942.1\n     * Section 8: Other outcomes / phd001949.1\n\t * WHI Extension Study Protocol: Section 8 - Outcomes /phd004180.2 and phd004182.2\n\n##### HVH\n* dbGaP study accession: phs001013.v3\n* document name/document accession: Manual of operations / phd005482.2\n\n##### Mayo_VTE\n* dbGaP study accession: phs000289.v2\n* document name/document accession: Manual for recruitment and data entry / phd003193.1\n\n##### ARIC and CHS\nVTE data for *_ARIC_* (phs000280) and *_CHS_* (phs000287) was from the _LITE_ project (Longitudinal Investigation of Thromboembolism Etiology). The _LITE_ study design, methods, and VTE incidence rates are reported in references 1 and 2 below [^1] [^2].\n\nIn addition, brief descriptions for each of the studies can be found in Table S1 (Main Design and Sample Characteristics of the Analyzed VTE studies) of reference 3 [^3] below.\n\n\n### Additional information for users of TOPMed data \n\nFor cohort studies with subcohort structure or differing protocols for certain subgroups, matching of cases and controls within a study should be done within each subcohort or subgroup and the subgroup/subcohort structure should be included as a covariate in analyses. For the studies with subcohorts, the variable `subcohort_1` in the DCC harmonized demographic dataset identifies the subcohorts. \n\nAscertainment of subjects for TOPMed sequencing in some of these studies favored certain conditions related to VTE processes (e.g. stroke and atrial fibrillation). In these situations, analysts should consider excluding controls with a history of these conditions from analyses.\nThe following provides additional information  for individual studies. \n\n#### WHI\nTwo subgroups were defined as subjects in the Hormone Replacement Therapy trial (HRT) and subjects in the Medical Records Cohort (MRC) but not in HRT. The table below lists the dbGaP variables needed to identify these subgroups. Ascertainment for TOPMed sequencing favored stroke cases. The table includes dbGaP variables that identify stroke cases.\n\n|variable name| description| dataset accession| variable accession|\n|:---:|:---:|:---:|:---:|\n|HRTFLAG| HRT participant| pht001031|phv00080426.v6.p3|\n|EXT2MRC| MRC participant| pht003395| phv00192302.v3.p3|\n|STROKE| indicator of stroke event| pht003407| phv00193202.v3.p3|\n|STROKE| self-report of stroke at screening| pht000998| phv00078478.v6.p3|\n\n#### FHS\n\n*_FHS_* has the following subcohorts: Original, Offspring, New Spouse Offspring, Generation 3, Omni1 and Omni2. Some TOPMed-sequenced subjects for *_FHS_* were selected because they were AFib (atrial fibrillation) cases. The table below gives dbGaP variables needed to identify AFib cases. \n\n|variable name| description| dataset accession| variable accession|\n|:---:|:---:|:---:|:---:|\n|afx| atrial fibrillation/flutter status   | pht003315| phv00273699.v1.p10|\n\n#### CHS \n\nCHS has two subcohorts: Old and New.\n\nA selection of VTE cases for *_CHS_* were sequenced for TOPMed freeze5. Additional subjects from *_CHS_* were sequenced in freeze6 but at a different sequencing center. Analysts should check for potential batch effects.\n\n#### ARIC \n\n*_ARIC_* has no subcohort structure. Some TOPMed sequenced subjects for *_ARIC_* were selected because they were AFib (atrial fibrillation) cases. It should be noted that the AFib cases for *_ARIC_* were sequenced at a different center than the remaining *_ARIC_* subjects.\n\n|variable name| description| dataset accession| variable accession|\n|:---:|:---:|:---:|:---:|\n|AFECGV1| prevalent AFib at visit 1| pht004118 |phv00207561.v1.p1|\n|AFINCBY05| incident AFib any source| pht004118|phv00207568.v1.p1|\n\n#### HVH \n\nSome TOPMed sequenced subjects for *_HVH_* were selected because they were AFib (atrial fibrillation) cases. It should be noted that the AFib cases for *_HVH_* were sequenced at a different center than the remaining *_HVH_* subjects.\nThe encoded value for `ccs` for AFib cases is 4.\n\n|variable name| description| dataset accession| variable accession|\n|:---:|:---:|:---:|:---:|\n|ccs| encoded value case status| pht005311 |phv00259376.v2.p2|\n\n\n\n[^1]: Cushman, M. et al (2004). Deep vein thrombosis and pulmonary embolism in two cohorts: the longitudinal investigation of thromboembolism etiology. Am J Med, 117(1) 19-25.\n\n[^2]: Tsai, A.W. et al (2002). Cardiovascular risk factors and venous thromboembolism incidence: the longitudinal investigation of thromboembolism etiology. Arch Intern Med, 162(10) 1182-1189.\n\n[^3]: Germain, M et al (2015). Meta-analysis of 65,734 individuals identifies TSPAN15 and SLC44A2 as two susceptibility loci for venous thromboembolism. Am J Hum Genet, 96(4) 532-542.\n",
  "encoded_values": [
    {
      "code": "0",
      "value": "Not known to ever have a VTE event, either self-reported or from medical records"
    },
    {
      "code": "1",
      "value": "Experienced a VTE event as verified by adjudication or by medical professionals"
    }
  ],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C1861172"
    }
  ],
  "harmonization_units": [
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v4.pht004063.v2.phv00204712.v1", "phs000280.v4.pht006485.v1.phv00298125.v1", "phs000280.v4.pht006485.v1.phv00298126.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # case status for ARIC\n  # All ARIC cases were incident (i.e. no previous history)\n  # follow-up started at visit1 so age = age at visit1\n\n  # get dataset with age at visit 1 information\n  # get dataset including the subjects followed for VTE\n  # join to keep subjects followed for VTE\n\n  dat1 <- phen_list$source_data$pht004063\n  dat2 <- phen_list$source_data$pht006485\n  dat <- left_join(dat2, dat1)\n\n  # change age and time to numeric\n  dat$V1AGE01 <- as.numeric(dat$V1AGE01)\n  dat$PTime <- as.numeric(dat$PTime)\n\n  # event: 0 = no event, 1 = event unprovoked, 2 = event provoked\n  # PTime = time to event or censoring, given as days from visit 1\n  # compute age = age at visit 1 + days from visit1/365.25\n  # keep only non-missing information\n\n   dat <- dat %>%\n          mutate(vte_case_status = ifelse(event %in% c(1, 2), 1, NA)) %>%\n          mutate(vte_case_status = ifelse(event %in% 0, 0, vte_case_status)) %>%\n          mutate(age = V1AGE01 + PTime / 365.25 ) %>%\n          filter(!is.na(vte_case_status) & !is.na(age)) %>%\n          mutate(vte_case_status = as.character(vte_case_status)) %>%\n          select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100487.v1", "phs000287.v6.pht005981.v1.phv00273565.v1", "phs000287.v6.pht005981.v1.phv00273566.v1", "phs000287.v6.pht005981.v1.phv00273567.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # case status for CHS\n  # some prior history (self-report of DVT or PE at baseline)\n\n  # get dataset with age at CHS baseline information\n  # get dataset including the subjects followed for VTE\n  # join to keep subjects followed for VTE\n\n  dat1 <- phen_list$source_data$pht001452\n  dat2 <- phen_list$source_data$pht005981\n  dat <- left_join(dat2, dat1)\n\n  # remove subjects with prior history\n  dat <- dat %>% filter(!(vtpehx01 %in% 1))\n\n  # change age and days variables to numeric\n  dat$AGEBL <- as.numeric(dat$AGEBL)\n  dat$ttoevent <- as.numeric(dat$ttoevent)\n\n  # assign case status\n  # assign age: age at CHS baseline + days from baseline to event/censoring/365.25\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(vte_case_status = ifelse(vt %in% 1, 1, NA)) %>%\n          mutate(vte_case_status = ifelse(vt %in% 0, 0, vte_case_status)) %>%\n          mutate(age = AGEBL + ttoevent / 365.25) %>%\n          filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "FHS_G3NOSOm12",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177927.v4", "phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00177931.v4", "phs000007.v29.pht003099.v4.phv00177933.v4", "phs000007.v29.pht003099.v4.phv00177935.v4", "phs000007.v29.pht003099.v4.phv00177985.v4", "phs000007.v29.pht003099.v4.phv00177986.v4", "phs000007.v29.pht003099.v4.phv00177987.v4", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 120,
          "name": "vte_prior_history_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # case status for FHS NOS, Gen3, Omni1, and Omni2\n  # follow-up started at visit1\n  # Omni1 had Exams 1 - 4, the rest only Exams 1 - 2\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: NOS = 2, Gen3 = 3, Omni1 = 7, Omni2 = 72\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% c(2, 3, 7, 72))\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # filter out prior history\n  dat3 <- phen_list$harmonized_data$vte_prior_history_1\n  dat <- left_join(dat, dat3)\n  dat <- dat %>% filter(!(vte_prior_history_1 %in% 1))\n\n  # change age and day variables to numeric\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n  for (i in 2:4){\n    v <- paste0(\"date\", i)\n    dat[, v] <- as.numeric(dat[, v])\n    v2 <- paste0(\"att\", i)\n    dat[, v2] <- as.numeric(dat[, v2])\n  }\n  dat$att1 <- as.numeric(dat$att1)\n\n  # determine last exam attended (will need for controls)\n  tmp <- as.matrix(dat[, paste0(\"att\", 1:4)])\n  w <- apply(tmp, 1, function(x) max(which(x %in% 1)))\n  dat$last_exam <- w\n\n  # define variable = days from visit1 to last exam\n  for (i in 1:nrow(dat)){\n    if (dat$last_exam[i] == 1){\n      dat$days_last[i] <- 0\n    } else {\n      dat$days_last[i] <- dat[i, paste0(\"date\", dat$last_exam[i])]\n    }\n  }\n\n  # case status indicator\n  dat <- dat %>% mutate(vte_case_status = ifelse(EVENT1 %in% c(1, 2, 3), 1, 0))\n\n  # filter out controls if last exam is only at baseline visit1\n  dat <- dat %>%\n         filter(!(vte_case_status %in% 0 & last_exam == 1))\n\n  #  for control age = age at last exam = age visit1 + date last exam/365.25\n  #  for case age = age visit1 + days visit 1 to event/365.25\n\n  dat <- dat %>%\n         mutate(age = ifelse(vte_case_status %in% 1, age1 + EDATE1 / 365.25, NA)) %>%\n         mutate(age = ifelse(vte_case_status %in% 0, age1 + days_last / 365.25, age)) %>%\n         filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "FHS_Offspring",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177927.v4", "phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00177931.v4", "phs000007.v29.pht003099.v4.phv00177933.v4", "phs000007.v29.pht003099.v4.phv00177935.v4", "phs000007.v29.pht003099.v4.phv00177937.v4", "phs000007.v29.pht003099.v4.phv00177939.v4", "phs000007.v29.pht003099.v4.phv00177941.v4", "phs000007.v29.pht003099.v4.phv00177943.v4", "phs000007.v29.pht003099.v4.phv00177945.v4", "phs000007.v29.pht003099.v4.phv00177985.v4", "phs000007.v29.pht003099.v4.phv00177986.v4", "phs000007.v29.pht003099.v4.phv00177987.v4", "phs000007.v29.pht003099.v4.phv00177988.v4", "phs000007.v29.pht003099.v4.phv00177989.v4", "phs000007.v29.pht003099.v4.phv00177990.v4", "phs000007.v29.pht003099.v4.phv00177991.v4", "phs000007.v29.pht003099.v4.phv00177992.v4", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 120,
          "name": "vte_prior_history_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # previous history for FHS Offspring\n  # follow-up started at visit6\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: Offspring = 1\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% 1)\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # get dataset with harmonized vte_prior_history\n  dat3 <- phen_list$harmonized_data$vte_prior_history_1\n  dat <- left_join(dat, dat3)\n\n  # to determine status if did not attend visit 6:\n  # find max days for those who did attend visit6 before any exclusions\n  max6 <- max(as.numeric(dat$date6), na.rm = TRUE)\n\n  # remove subjects with prior history\n  dat <- dat %>% filter(!(vte_prior_history_1 %in% 1))\n\n  # change age and day variables to numeric\n  # Offspring spans visits 1 - 9\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n  for (i in 2:9){\n    v <- paste0(\"date\", i)\n    dat[, v] <- as.numeric(dat[, v])\n    v2 <- paste0(\"att\", i)\n    dat[, v2] <- as.numeric(dat[, v2])\n  }\n  dat$att1 <- as.numeric(dat$att1)\n\n  # determine last exam attended (will need for controls)\n  tmp <- as.matrix(dat[, paste0(\"att\", 1:9)])\n  w <- apply(tmp, 1, function(x) max(which(x %in% 1)))\n  dat$last_exam <- w\n\n  # define variable = days from visit1 to last exam\n  for (i in 1:nrow(dat)){\n    if (dat$last_exam[i] == 1){\n      dat$days_last[i] <- 0\n    } else {\n      dat$days_last[i] <- dat[i, paste0(\"date\", dat$last_exam[i])]\n    }\n  }\n\n  dat$vte_case_status <- NA\n  dat$age <- NA\n\n  # determine case: event and event time (EDATE1) >= visit6 time (date6)\n  aa <- dat$EVENT1 %in% c(1, 2, 3)\n  a <- aa & !is.na(dat$date6) & dat$EDATE1 >= dat$date6\n  dat$vte_case_status[a] <- 1\n\n  # event but did not attend visit 6:\n  #   check if EDATE1 >= date7 (if attended visit 7)\n  #   check if EDATE1 > max(date6) for subjects attending visit6\n  b1 <- aa & is.na(dat$date6) & !is.na(dat$date7) & dat$EDATE1 >= dat$date7\n  b2 <- aa & is.na(dat$date6) & dat$EDATE1 > max6\n  b <- b1 | b2\n  dat$vte_case_status[b] <- 1\n\n  # determine control: no event and last exam > exam6\n  ct <- is.na(dat$EVENT1) & dat$last_exam > 6\n  dat$vte_case_status[ct] <- 0\n\n  # age for cases = age at event = age1 + EDATE1/365.25\n  # age for controls = age1 + days to last exam/365.25\n  #  will not keep missing\n\n  s1 <- dat$vte_case_status %in% 1\n  dat$age[s1] <- dat$age1[s1] + dat$EDATE1[s1] / 365.25\n  s2 <- dat$vte_case_status %in% 0\n  dat$age[s2] <- dat$age1[s2] + dat$days_last[s2] / 365.25\n\n  dat <- dat %>%\n         filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "FHS_Original",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177927.v4", "phs000007.v29.pht003099.v4.phv00177928.v4", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00177931.v4", "phs000007.v29.pht003099.v4.phv00177933.v4", "phs000007.v29.pht003099.v4.phv00177935.v4", "phs000007.v29.pht003099.v4.phv00177937.v4", "phs000007.v29.pht003099.v4.phv00177939.v4", "phs000007.v29.pht003099.v4.phv00177941.v4", "phs000007.v29.pht003099.v4.phv00177943.v4", "phs000007.v29.pht003099.v4.phv00177945.v4", "phs000007.v29.pht003099.v4.phv00177947.v4", "phs000007.v29.pht003099.v4.phv00177949.v4", "phs000007.v29.pht003099.v4.phv00177951.v4", "phs000007.v29.pht003099.v4.phv00177953.v4", "phs000007.v29.pht003099.v4.phv00177955.v4", "phs000007.v29.pht003099.v4.phv00177957.v4", "phs000007.v29.pht003099.v4.phv00177959.v4", "phs000007.v29.pht003099.v4.phv00177961.v4", "phs000007.v29.pht003099.v4.phv00177963.v4", "phs000007.v29.pht003099.v4.phv00177965.v4", "phs000007.v29.pht003099.v4.phv00177967.v4", "phs000007.v29.pht003099.v4.phv00177969.v4", "phs000007.v29.pht003099.v4.phv00177971.v4", "phs000007.v29.pht003099.v4.phv00177973.v4", "phs000007.v29.pht003099.v4.phv00177975.v4", "phs000007.v29.pht003099.v4.phv00177977.v4", "phs000007.v29.pht003099.v4.phv00177979.v4", "phs000007.v29.pht003099.v4.phv00177981.v4", "phs000007.v29.pht003099.v4.phv00177983.v4", "phs000007.v29.pht003099.v4.phv00177985.v4", "phs000007.v29.pht003099.v4.phv00177986.v4", "phs000007.v29.pht003099.v4.phv00177987.v4", "phs000007.v29.pht003099.v4.phv00177988.v4", "phs000007.v29.pht003099.v4.phv00177989.v4", "phs000007.v29.pht003099.v4.phv00177990.v4", "phs000007.v29.pht003099.v4.phv00177991.v4", "phs000007.v29.pht003099.v4.phv00177992.v4", "phs000007.v29.pht003099.v4.phv00177993.v4", "phs000007.v29.pht003099.v4.phv00177994.v4", "phs000007.v29.pht003099.v4.phv00177995.v4", "phs000007.v29.pht003099.v4.phv00177996.v4", "phs000007.v29.pht003099.v4.phv00177997.v4", "phs000007.v29.pht003099.v4.phv00177998.v4", "phs000007.v29.pht003099.v4.phv00177999.v4", "phs000007.v29.pht003099.v4.phv00178000.v4", "phs000007.v29.pht003099.v4.phv00178001.v4", "phs000007.v29.pht003099.v4.phv00178002.v4", "phs000007.v29.pht003099.v4.phv00178003.v4", "phs000007.v29.pht003099.v4.phv00178004.v4", "phs000007.v29.pht003099.v4.phv00178005.v4", "phs000007.v29.pht003099.v4.phv00178006.v4", "phs000007.v29.pht003099.v4.phv00178007.v4", "phs000007.v29.pht003099.v4.phv00178008.v4", "phs000007.v29.pht003099.v4.phv00178009.v4", "phs000007.v29.pht003099.v4.phv00178010.v4", "phs000007.v29.pht003099.v4.phv00178011.v4", "phs000007.v29.pht003099.v4.phv00226997.v1", "phs000007.v29.pht003099.v4.phv00226998.v1", "phs000007.v29.pht003099.v4.phv00227000.v1", "phs000007.v29.pht003099.v4.phv00227001.v1", "phs000007.v29.pht003099.v4.phv00227003.v1", "phs000007.v29.pht003099.v4.phv00227004.v1", "phs000007.v29.pht003099.v4.phv00227006.v1", "phs000007.v29.pht003099.v4.phv00227007.v1", "phs000007.v29.pht006025.v1.phv00276977.v1", "phs000007.v29.pht006025.v1.phv00277005.v1"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 120,
          "name": "vte_prior_history_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # previous history for FHS Original\n  # follow-up started at visit24\n\n  # get dataset with sub-cohort indicator and visit information\n  # select the given subcohorts: Original = 0\n  # get dataset with VTE event information\n  # join\n\n  dat1 <- phen_list$source_data$pht003099 %>%\n         filter(idtype %in% 0)\n  dat2 <- phen_list$source_data$pht006025\n  dat  <- left_join(dat1, dat2)\n\n  # get dataset with harmonized vte_prior_history\n  dat3 <- phen_list$harmonized_data$vte_prior_history_1\n  dat <- left_join(dat, dat3)\n\n  # to determine status if did not attend visit 24:\n  # find max days for those who did attend visit24 before any exclusions\n  max24 <- max(as.numeric(dat$date24), na.rm = TRUE)\n\n  # remove subjects with prior history\n  dat <- dat %>% filter(!(vte_prior_history_1 %in% 1))\n\n  # change age and day variables to numeric\n  # Original spans visits 1 - 32\n  dat$age1 <- as.numeric(dat$age1)\n  dat$EDATE1 <- as.numeric(dat$EDATE1)\n  for (i in 2:32){\n    v <- paste0(\"date\", i)\n    dat[, v] <- as.numeric(dat[, v])\n    v2 <- paste0(\"att\", i)\n    dat[, v2] <- as.numeric(dat[, v2])\n  }\n  dat$att1 <- as.numeric(dat$att1)\n\n  # determine last exam attended (will need for controls)\n  tmp <- as.matrix(dat[, paste0(\"att\", 1:32)])\n  w <- apply(tmp, 1, function(x) max(which(x %in% 1)))\n  dat$last_exam <- w\n\n  # define variable = days from visit1 to last exam\n  for (i in 1:nrow(dat)){\n    if (dat$last_exam[i] == 1){\n      dat$days_last[i] <- 0\n    } else {\n      dat$days_last[i] <- dat[i, paste0(\"date\", dat$last_exam[i])]\n    }\n  }\n\n  dat$vte_case_status <- NA\n  dat$age <- NA\n\n  # determine case: event and event time (EDATE1) >= visit24 time (date24)\n  aa <- dat$EVENT1 %in% c(1, 2, 3)\n  a <- aa & !is.na(dat$date24) & dat$EDATE1 >= dat$date24\n  dat$vte_case_status[a] <- 1\n\n  # event but did not attend visit 24:\n  #   check if EDATE1 >= date25 (if attended visit 25)\n  #   check if EDATE1 > max(date24) for subjects attending visit24\n  b1 <- aa & is.na(dat$date24) & !is.na(dat$date25) & dat$EDATE1 >= dat$date25\n  b2 <- aa & is.na(dat$date24) & dat$EDATE1 > max24\n  b <- b1 | b2\n  dat$vte_case_status[b] <- 1\n\n  # determine control: no event and last exam > exam24\n  ct <- is.na(dat$EVENT1) & dat$last_exam > 24\n  dat$vte_case_status[ct] <- 0\n\n  # age for cases = age at event = age1 + EDATE1/365.25\n  # age for controls = age1 + days to last exam/365.25\n  #  will not keep missing\n\n  s1 <- dat$vte_case_status %in% 1\n  dat$age[s1] <- dat$age1[s1] + dat$EDATE1[s1] / 365.25\n  s2 <- dat$vte_case_status %in% 0\n  dat$age[s2] <- dat$age1[s2] + dat$days_last[s2] / 365.25\n\n  dat <- dat %>%\n         filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "HVH",
      "component_study_variables": ["phs001013.v3.pht005311.v2.phv00259376.v2", "phs001013.v3.pht005311.v2.phv00259377.v2", "phs001013.v3.pht005311.v2.phv00259378.v2", "phs001013.v3.pht005311.v2.phv00259384.v2"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # VTE case status for HVH\n  # get phenotype dataset\n  datt <- phen_list$source_data$pht005311\n\n  # choose VTE cases - manual says all are incident\n  dat1 <- datt %>% filter(ccs %in% 3)\n\n  # take out subjects identified as cases then choose controls from remaining\n  # necessary since controls at one time could have event to become case\n  dat2 <- anti_join(datt, dat1, by = \"topmed_subject_id\")\n\n    # choose controls from remaining\n  dat2 <- dat2 %>% filter(ccs %in% 0)\n\n  # some controls have duplicate entries\n  # arrange by index year in descending order and choose later year\n  dat3 <- dat2 %>% arrange(desc(indexy)) %>% group_by(topmed_subject_id) %>%\n               slice(1)\n\n  # further restrict controls to those with index year after the start of recruitment 2002\n  #  and remove controls with prior vt indication\n  dat3 <- dat3 %>% filter(as.numeric(indexy) >= 2002 & !(priorvt %in% 1))\n\n  dat <- rbind(dat1, as.data.frame(dat3))\n\n  # create case status indicator\n  # age: age in years at date of VT diagnosis (cases) or at selection (controls)\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(vte_case_status = ifelse(ccs %in% 3, 1, 0)) %>%\n          filter(!is.na(vte_case_status) & !is.na(age)) %>%\n          mutate(vte_case_status = as.character(vte_case_status)) %>%\n          select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "Mayo_GENEVA",
      "component_study_variables": ["phs000289.v2.pht001886.v2.phv00121844.v1", "phs000289.v2.pht001886.v2.phv00121846.v1", "phs000289.v2.pht001886.v2.phv00121861.v2"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # VTE case status for Mayo GENEVA study\n  # get phenotype dataset\n  dat <- phen_list$source_data$pht001886\n\n  # case control variable VTE selects\n  # create case status indicator; 0 = control, 1 = case\n\n  dat <- dat %>% filter(!is.na(phenotype) & phenotype != -9) %>%\n          mutate(vte_case_status = ifelse(phenotype == 2, 1, 0))\n\n  # age: age at clot for cases, age at enrollment for controls\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(age = ifelse(vte_case_status %in% 1, age_clot, NA)) %>%\n          mutate(age = ifelse(vte_case_status %in% 0, enrollage, age)) %>%\n          filter(!is.na(vte_case_status) & !is.na(age)) %>%\n          mutate(vte_case_status = as.character(vte_case_status)) %>%\n          select(topmed_subject_id, vte_case_status, age)\n\n  return(dat)\n}\n"
    },
    {
      "name": "Mayo_OC",
      "component_study_variables": ["phs001402.v1.pht008239.v1.phv00389900.v1", "phs001402.v1.pht008239.v1.phv00389902.v1", "phs001402.v1.pht008239.v1.phv00389917.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # VTE case status for Mayo OC study\n  # get phenotype dataset\n  dat <- phen_list$source_data$pht008239\n\n  # case control variable VTE selects\n  # create case status indicator; 0 = control, 1 = case\n\n  dat <- dat %>% filter(!is.na(phenotype) & phenotype != -9) %>%\n          mutate(vte_case_status = ifelse(phenotype == 2, 1, 0))\n\n  # age: age at clot for cases, age at enrollment for controls\n  # keep only non-missing information\n\n   dat <- dat %>% mutate(age = ifelse(vte_case_status %in% 1, age_clot, NA)) %>%\n          mutate(age = ifelse(vte_case_status %in% 0, enrollage, age)) %>%\n          filter(!is.na(vte_case_status) & !is.na(age)) %>%\n          mutate(vte_case_status = as.character(vte_case_status)) %>%\n          select(topmed_subject_id, vte_case_status, age)\n\n  # change age value \">89\" to 90\n   dat$age[dat$age %in% \">89\"] <- 90\n\n  return(dat)\n}\n"
    },
    {
      "name": "WHI_HRT",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078436.v6", "phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht001031.v6.phv00080426.v6", "phs000200.v11.pht003407.v3.phv00193178.v3", "phs000200.v11.pht003407.v3.phv00193179.v3", "phs000200.v11.pht003407.v3.phv00193193.v3", "phs000200.v11.pht003407.v3.phv00193194.v3", "phs000200.v11.pht003407.v3.phv00193505.v3"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 120,
          "name": "vte_prior_history_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # VTE case status\n  # follow-up started at baseline\n  # age = age at enrollment + (days from enrollment to event or censoring)/365.25\n\n  # get dataset with screening information\n  dat1 <- phen_list$source_data$pht000998\n\n  # get dataset with membership flags and select HRT participants\n  # combine datasets\n  dat2 <- phen_list$source_data$pht001031 %>% filter(HRTFLAG %in% 1)\n  datt <- left_join(dat2, dat1)\n\n  # get previous history data set\n  # filter out subjects with known or self-reported previous VTE history\n  dath <- phen_list$harmonized_data$vte_prior_history_1\n  datt <- left_join(datt, dath)\n  dat <- datt %>% filter(!(vte_prior_history_1 %in% 1))\n\n  # get dataset with outcomes and combine with previous\n  outc <- phen_list$source_data$pht003407\n  dat <- left_join(dat, outc)\n\n  # AGE is measured at screening on form F2\n  # abs(F2DAYS) is days between screening and enrollment\n  # do not use F2DAYS when F2DAYS > 0\n  # correct for erroneous F2DAYS being positive\n  dat$F2DAYS <- as.numeric(dat$F2DAYS)\n  dat$F2DAYS[dat$F2DAYS > 0] <- 0\n\n  # case/control status: case = either DVT or PE or both\n  # controls: not known to have VTE event\n  dat <- dat %>% mutate(vte_case_status = ifelse( (DVT %in% 1 | PE %in% 1), 1, 0))\n\n  # change age and days variables to numeric\n  dat$AGE <- as.numeric(dat$AGE)\n  dat$DVTDY <- as.numeric(dat$DVTDY)\n  dat$PEDY <- as.numeric(dat$PEDY)\n  dat$ENDFOLLOWDY <- as.numeric(dat$ENDFOLLOWDY)\n\n  dat$age <- NA\n  # age for CASES\n  # age at event: age at enrollment + (days to event)/365.25\n  # age at enrollment is age at screening + |F2DAYS|\n  # if both types of events happen, choose the days to earliest event\n\n  sel <- dat$vte_case_status %in% 1\n  dat$age[sel] <- dat$AGE[sel] +\n     (abs(dat$F2DAYS[sel]) + pmin(dat$PEDY[sel], dat$DVTDY[sel], na.rm = TRUE)) / 365.25\n\n  # age for CONTROLS = age at enrollment + (days to end of followup)/365.25\n  dat$age[!sel] <- dat$AGE[!sel] + (abs(dat$F2DAYS[!sel]) + dat$ENDFOLLOWDY[!sel]) / 365.25\n\n  # final selection\n  dat <- dat %>% filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n  return(dat)\n}\n"
    },
    {
      "name": "WHI_MRCnonHRT",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078436.v6", "phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht001031.v6.phv00080426.v6", "phs000200.v11.pht003395.v3.phv00192301.v3", "phs000200.v11.pht003395.v3.phv00192302.v3", "phs000200.v11.pht003407.v3.phv00193178.v3", "phs000200.v11.pht003407.v3.phv00193179.v3", "phs000200.v11.pht003407.v3.phv00193193.v3", "phs000200.v11.pht003407.v3.phv00193194.v3", "phs000200.v11.pht003407.v3.phv00193505.v3"],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 120,
          "name": "vte_prior_history_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n\n  # previous history for WHI MRC non-HRT participants\n  # follow-up started at beginning of Extension 2\n\n  # get dataset with screening information\n  dat1 <- phen_list$source_data$pht000998\n\n  # get datasets with membership flags and combine\n  dat2 <- phen_list$source_data$pht001031\n  dat3 <- phen_list$source_data$pht003395\n  datt <- full_join(dat3, dat2)\n\n  # select subjects in MRC but not in HRT\n  datt <- datt %>% filter(EXT2MRC %in% 1 & HRTFLAG %in% 0)\n\n  # combine with screening info\n  datt <- left_join(datt, dat1)\n\n  # get previous history data set\n  # filter out subjects with known or self-reported previous VTE history\n  dath <- phen_list$harmonized_data$vte_prior_history_1\n  datt <- left_join(datt, dath)\n  dat <- datt %>% filter(!(vte_prior_history_1 %in% 1))\n\n  # get dataset with outcomes and combine with previous\n  outc <- phen_list$source_data$pht003407\n  dat <- left_join(dat, outc)\n\n  # AGE is measured at screening on form F2\n  # abs(F2DAYS) is days between screening and enrollment\n  # do not use F2DAYS when F2DAYS > 0\n  # correct for erroneous F2DAYS being positive\n  dat$F2DAYS <- as.numeric(dat$F2DAYS)\n  dat$F2DAYS[dat$F2DAYS > 0] <- 0\n\n  # case/control status: case = either DVT or PE or both\n  # controls: not known to have VTE event\n  dat <- dat %>% mutate(vte_case_status = ifelse( (DVT %in% 1 | PE %in% 1), 1, 0))\n\n  # change age and days variables to numeric\n  dat$AGE <- as.numeric(dat$AGE)\n  dat$DVTDY <- as.numeric(dat$DVTDY)\n  dat$PEDY <- as.numeric(dat$PEDY)\n  dat$ENDFOLLOWDY <- as.numeric(dat$ENDFOLLOWDY)\n  dat$EXT2DAYS <- as.numeric(dat$EXT2DAYS)\n\n  # age for CASES\n  # age at event: age at enrollment + (days to event)/365.25\n  # age at enrollment is age at screening + |F2DAYS|\n  # if both types of events happen, choose the days to earliest event\n\n  dat$age <- NA\n  sel <- dat$vte_case_status %in% 1\n  dat$age[sel] <- dat$AGE[sel] +\n     (abs(dat$F2DAYS[sel]) + pmin(dat$PEDY[sel], dat$DVTDY[sel], na.rm = TRUE)) / 365.25\n\n  # age for CONTROLS = age at enrollment + (days to end of followup)/365.25\n  # don't include subjects whose last followup is before EXT2\n  sel2 <- !is.na(dat$ENDFOLLOWDY) & !is.na(dat$EXT2DAYS) & dat$ENDFOLLOWDY > dat$EXT2DAYS\n  sel3 <- !sel & sel2\n  dat$age[sel3] <- dat$AGE[sel3] + (abs(dat$F2DAYS[sel3]) + dat$ENDFOLLOWDY[sel3]) / 365.25\n\n  # final selection\n  dat <- dat %>% filter(!is.na(vte_case_status) & !is.na(age)) %>%\n         mutate(vte_case_status = as.character(vte_case_status)) %>%\n         select(topmed_subject_id, vte_case_status, age)\n  return(dat)\n}\n"
    }
  ]
}
