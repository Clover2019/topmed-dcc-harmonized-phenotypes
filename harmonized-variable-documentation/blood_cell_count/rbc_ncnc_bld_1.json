{
  "name": "rbc_ncnc_bld_1",
  "phenotype_concept": "rbc_ncnc_bld",
  "concept_variant": 1,
  "description": "Count by volume, or number concentration (ncnc), of red blood cells in the blood (bld).",
  "version": 3,
  "dcc_harmonization_id": 116,
  "data_type": "decimal",
  "measurement_units": "millions / microliter",
  "has_age_variable": true,
  "date_harmonized": "2018-09-28 15:33:27",
  "dcc_harmonization_comments": "For studies or cohorts with measurements at more than one visit, in order to maximize sample size, one measurement per subject was selected, rather than choosing the same visit for all subjects. This was done on a trait-by-trait basis. The algorithm for choosing a visit for a subject differed by study.\n\n### Study-specific comments\n\n#### FHS\nOnly the Offspring subcohort had measurements at multiple visits (exams). For this subcohort, the measurement at the most recent exam available was chosen (since more recent exams used more up-to-date procedures). \n\n#### ARIC\nThe visit with the most non-missing phenotype values was chosen first. For subjects without measurements at this visit, the visit with the next most non-missing values was chosen, and so forth in succession. \n\n#### Amish\nSubjects with age recorded as 90+ were assigned a harmonized age of 90.\n\n### QC checks\n\nPlease note that visit selection to maximize sample size introduced the possibility that related _harmonized_ hematology variables may be measured at different visits for a given subject. For example, for any given subject, the _harmonized_ values of red blood cell count (RBC) and other red blood cell phenotypes may not be from the same visit.\n",
  "encoded_values": [],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C0942422"
    }
  ],
  "harmonization_units": [
    {
      "name": "Amish",
      "component_study_variables": ["phs000956.v2.pht005002.v1.phv00252976.v1", "phs000956.v2.pht005002.v1.phv00253010.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n\n  source_data <- phen_list$source_data\n   # RBC_count units already millions/microliter\n  dataset <- source_data[[\"pht005002\"]]\n  dataset$red_blood_cell_count_baseline <- as.numeric(dataset$red_blood_cell_count_baseline)\n  names(dataset)[names(dataset) %in% \"red_blood_cell_count_baseline\"] <- \"rbc_ncnc_bld\"\n\n   # age - winsorize at 90\n   dataset$age_baseline[dataset$age_baseline %in% \"90+\"] <- 90\n   dataset$age_baseline <- as.numeric(dataset$age_baseline)\n   names(dataset)[names(dataset) %in% \"age_baseline\"] <- \"age\"\n\n   # subset to non-missing values\n  sel <- !is.na(dataset$age) & !is.na(dataset$rbc_ncnc_bld)\n  dataset <- dataset[sel, ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v4.pht004064.v2.phv00204871.v1", "phs000280.v4.pht004065.v2.phv00204975.v1", "phs000280.v4.pht004109.v2.phv00207287.v1", "phs000280.v4.pht004110.v2.phv00207299.v1", "phs000280.v4.pht006422.v1.phv00294955.v1", "phs000280.v4.pht006431.v1.phv00295623.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n    library(dplyr)\n    library(magrittr)\n\n    # Red blood cell count RBC (millions/microliter) - measured at visit 3, 4, and 5\n    # Age at visit\n    dem3 <- phen_list$source_data[[\"pht004064\"]] %>%\n        mutate(visit = 3, age = as.numeric(V3AGE31))\n    dem4 <- phen_list$source_data[[\"pht004065\"]] %>%\n        mutate(visit = 4, age = as.numeric(V4AGE41))\n    dem5 <- phen_list$source_data[[\"pht006431\"]] %>%\n        mutate(visit  = 5, age = as.numeric(AGE_STAGE_1))\n\n    dem <- list(dem3, dem4, dem5) %>%\n        lapply(select, topmed_subject_id, visit, age) %>%\n        do.call(rbind, .) %>%\n        tbl_df %>%\n        filter(!is.na(visit) & !is.na(age))\n\n    # get RBC data for each visit, eliminate subjects with missing codes\n    blood3 <- phen_list$source_data[[\"pht004109\"]] %>%\n        filter(!(HMTC3 %in% c(\"A\", \"O\")) ) %>%\n        mutate(visit = 3, rbc_ncnc_bld = as.numeric(HMTC3))\n    blood4 <- phen_list$source_data[[\"pht004110\"]] %>%\n        filter(!(HMTC3 %in% c(\"A\", \"O\")) ) %>%\n        mutate(visit = 4, rbc_ncnc_bld = as.numeric(HMTC3))\n    blood5 <- phen_list$source_data[[\"pht006422\"]] %>%\n        filter(!(CBC4 %in% c(\"A\", \"O\")) ) %>%\n        mutate(visit = 5, rbc_ncnc_bld = as.numeric(CBC4))\n\n    blood <- list(blood3, blood4, blood5) %>%\n        lapply(select, topmed_subject_id, visit, rbc_ncnc_bld) %>%\n        lapply(na.omit)\n\n    blood %<>% do.call(rbind, .)\n\n    dataset <- left_join(blood, dem, c(\"topmed_subject_id\", \"visit\"))\n\n    # Successively select from visit with most observations for additional subjects\n    datafnl <- NULL\n    while (nrow(dataset) > 0){\n     # create table of number of subjects per visit\n      tb <- dataset %>% group_by(visit) %>%\n            summarise(count = n())\n     # order the table in decreasing order, choose the top visit (most subjects)\n      tb <- tb[order(tb$count, decreasing = TRUE), ]\n      v <- tb %>% slice(1) %>% select(visit)\n      v <- as.numeric(v)\n     # select subjects with that visit\n      tmp <- dataset %>% filter(visit == v)\n      datafnl <- rbind(datafnl, tmp)\n     # remove chosen set of subjects and repeat the process with remaining subjects\n      dataset <- anti_join(dataset, tmp, by = \"topmed_subject_id\")\n    }\n   datafnl <- datafnl %>% select(topmed_subject_id, rbc_ncnc_bld, age) %>% na.omit\n   return(datafnl)\n}\n"
    },
    {
      "name": "CARDIA",
      "component_study_variables": ["phs000285.v3.pht001559.v2.phv00112439.v2", "phs000285.v3.pht001563.v2.phv00112687.v2"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n    library(dplyr)\n    library(magrittr)\n    # Age at measurement (Exam 1)\n    dat1 <- phen_list$source_data[[\"pht001559\"]] %>%\n        tbl_df() %>%\n        transmute(topmed_subject_id, age = as.numeric(A01AGE2))\n\n    # Red blood cell count (RBC) at Exam 1 (millions/microliter)\n    # eliminate subjects with missing code \"M\"\n    dat2 <- phen_list$source_data[[\"pht001563\"]] %>%\n        tbl_df() %>% filter(!(A05RBC %in% \"M\")) %>%\n        transmute(topmed_subject_id, rbc_ncnc_bld = as.numeric(A05RBC))\n\n    dataset <- left_join(dat2, dat1, by = \"topmed_subject_id\") %>%\n        select(topmed_subject_id, rbc_ncnc_bld, age) %>% na.omit()\n\n    return(dataset)\n}\n"
    },
    {
      "name": "FHS_Gen3NOSOmni2",
      "component_study_variables": ["phs000007.v29.pht002889.v2.phv00172179.v2", "phs000007.v29.pht003099.v4.phv00177932.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(\"dplyr\")\n\n  source_data <- phen_list$source_data\n   # RBC\n  dataset1 <- source_data[[\"pht002889\"]]\n  dataset1$RBC <- as.numeric(dataset1$RBC)\n  names(dataset1)[names(dataset1) %in% \"RBC\"] <- \"rbc_ncnc_bld\"\n\n  # age\n  dataset2 <- source_data[[\"pht003099\"]]\n  dataset2$age2 <- as.numeric(dataset2$age2)\n  names(dataset2)[names(dataset2) %in% \"age2\"] <- \"age\"\n\n  # combine\n  dataset <- inner_join(dataset1, dataset2)\n\n  # subset to non-missing values\n  sel <- !is.na(dataset$age) & !is.na(dataset$rbc_ncnc_bld)\n  dataset <- dataset[sel, ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Offspring",
      "component_study_variables": ["phs000007.v29.pht000030.v7.phv00007641.v5", "phs000007.v29.pht000031.v7.phv00008109.v5", "phs000007.v29.pht003099.v4.phv00177930.v4", "phs000007.v29.pht003099.v4.phv00177932.v4", "phs000007.v29.pht003099.v4.phv00177946.v4", "phs000007.v29.pht004802.v1.phv00227024.v1", "phs000007.v29.pht004802.v1.phv00227026.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(\"dplyr\")\n\n  source_data <- phen_list$source_data\n   # RBC\n  var <- \"rbc_ncnc_bld\"\n\n  # Offspring exam 9\n  dataset9 <- source_data[[\"pht004802\"]]\n  # subset to Offspring\n  dataset9 <- dataset9[dataset9$IDTYPE %in% 1, ]\n  dataset9$IDTYPE <- NULL\n\n  dataset9$RBC <- as.numeric(dataset9$RBC)\n\n  # Offspring exam 2\n  dataset2 <- source_data[[\"pht000031\"]]\n  dataset2$B762 <- as.numeric(dataset2$B762)\n\n  # Recode: hundred millions/microliter - need millions/microliter - so divide by 100\n  dataset2$B762 <- dataset2$B762 / 100\n\n   # Offspring exam 1\n  dataset1 <- source_data[[\"pht000030\"]]\n  dataset1$A139 <- as.numeric(dataset1$A139)\n\n  # Recode: hundred millions/microliter - need millions/microliter - so divide by 100\n  dataset1$A139 <- dataset1$A139 / 100\n\n  # ages\n  dataseta <- source_data[[\"pht003099\"]]\n  dataseta$age9 <- as.numeric(dataseta$age9)\n  dataseta$age2 <- as.numeric(dataseta$age2)\n  dataseta$age1 <- as.numeric(dataseta$age1)\n\n  # add appropriate ages to datasets\n  dataset9 <- inner_join(dataset9, dataseta)\n  dataset9$age2 <- NULL\n  dataset9$age1 <- NULL\n\n  dataset2 <- inner_join(dataset2, dataseta)\n  dataset2$age9 <- NULL\n  dataset2$age1 <- NULL\n\n  dataset1 <- inner_join(dataset1, dataseta)\n  dataset1$age9 <- NULL\n  dataset1$age2 <- NULL\n\n  sel <- !is.na(dataset9$RBC) & !is.na(dataset9$age9)\n  keep9 <- dataset9[sel, ]\n  names(keep9)[names(keep9) == \"RBC\"] <- var\n  names(keep9)[names(keep9) == \"age9\"] <- \"age\"\n\n  dataset2 <- anti_join(dataset2, keep9)\n  sel2 <- !is.na(dataset2$B762) & !is.na(dataset2$age2)\n  keep2 <- dataset2[sel2, ]\n  names(keep2)[names(keep2) == \"B762\"] <- var\n  names(keep2)[names(keep2) == \"age2\"] <- \"age\"\n\n  keep <- rbind(keep9, keep2)\n\n  dataset1 <- anti_join(dataset1, keep)\n  sel1 <-  !is.na(dataset1$A139) & !is.na(dataset1$age1)\n  keep1 <- dataset1[sel1, ]\n  names(keep1)[names(keep1) == \"A139\"] <- var\n  names(keep1)[names(keep1) == \"age1\"] <- \"age\"\n\n  # combine\n  dataset <- rbind(keep, keep1)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS_Omni1",
      "component_study_variables": ["phs000007.v29.pht003099.v4.phv00177936.v4", "phs000007.v29.pht004802.v1.phv00227024.v1", "phs000007.v29.pht004802.v1.phv00227026.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(\"dplyr\")\n\n  source_data <- phen_list$source_data\n   # RBC\n  dataset1 <- source_data[[\"pht004802\"]]\n  # choose Omni1 cohort\n  dataset1 <- dataset1[dataset1$IDTYPE %in% 7, ]\n\n  dataset1$RBC <- as.numeric(dataset1$RBC)\n  names(dataset1)[names(dataset1) %in% \"RBC\"] <- \"rbc_ncnc_bld\"\n  dataset1$IDTYPE <- NULL\n\n  # age\n  dataset2 <- source_data[[\"pht003099\"]]\n  dataset2$age4 <- as.numeric(dataset2$age4)\n  names(dataset2)[names(dataset2) %in% \"age4\"] <- \"age\"\n\n  # combine\n  dataset <- inner_join(dataset1, dataset2)\n\n  # subset to non-missing values\n  sel <- !is.na(dataset$age) & !is.na(dataset$rbc_ncnc_bld)\n  dataset <- dataset[sel, ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "HCHS_SOL",
      "component_study_variables": ["phs000810.v1.pht004715.v1.phv00226251.v1", "phs000810.v1.pht004715.v1.phv00226294.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n    library(dplyr)\n    library(magrittr)\n    # Red blood cell count (RBC) (millions/microliter) and age at measurement\n\n    dataset <- phen_list$source_data[[\"pht004715\"]] %>%\n        tbl_df %>%\n        mutate(rbc_ncnc_bld = as.numeric(LABA2),\n            age = as.integer(AGE)) %>%\n        select(topmed_subject_id, age, rbc_ncnc_bld) %>%\n        filter(!is.na(age), !is.na(rbc_ncnc_bld))\n\n    return(dataset)\n}\n"
    },
    {
      "name": "JHS",
      "component_study_variables": ["phs000286.v5.pht001949.v1.phv00126009.v1", "phs000286.v5.pht001959.v1.phv00127629.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(\"dplyr\")\n\n  source_data <- phen_list$source_data\n   # RBC_ncnc_bld\n  dataset1 <- source_data[[\"pht001959\"]]\n  dataset1$RED_CELL_COUNT <- as.numeric(dataset1$RED_CELL_COUNT)\n  names(dataset1)[names(dataset1) %in% \"RED_CELL_COUNT\"] <- \"rbc_ncnc_bld\"\n\n  # age\n  dataset2 <- source_data[[\"pht001949\"]]\n  dataset2$AGE01 <- as.numeric(dataset2$AGE01)\n  names(dataset2)[names(dataset2) %in% \"AGE01\"] <- \"age\"\n\n  # combine\n  dataset <- inner_join(dataset1, dataset2)\n\n  # subset to non-missing values\n  sel <- !is.na(dataset$age) & !is.na(dataset$rbc_ncnc_bld)\n  dataset <- dataset[sel, ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "MESA",
      "component_study_variables": ["phs000209.v13.pht003091.v3.phv00176011.v1", "phs000209.v13.pht004319.v1.phv00218990.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n    library(dplyr)\n    # RBC count at Exam 5 (M/uL)\n    dataset_rbc <- phen_list$source_data[[\"pht004319\"]] %>%\n        mutate(rbc_ncnc_bld = as.numeric(rbc5)) %>%\n        select(topmed_subject_id, rbc_ncnc_bld)\n\n    # Age at Exam 5\n    dataset_dem <- phen_list$source_data[[\"pht003091\"]] %>%\n        mutate(age = as.integer(age5c)) %>%\n        select(topmed_subject_id, age)\n\n    # Join and remove incomplete cases\n    dataset <- inner_join(dataset_dem, dataset_rbc, by = \"topmed_subject_id\") %>%\n        filter(complete.cases(.))\n    return(dataset)\n}\n"
    }
  ]
}
