{
  "name": "cimt_2",
  "phenotype_concept": "cimt",
  "concept_variant": 2,
  "description": "Common carotid intima-media thickness, calculated as the mean of four values: maximum of multiple thickness estimates from the left far wall, left near wall, right far wall, and right near wall.",
  "version": 1,
  "dcc_harmonization_id": 86,
  "data_type": "decimal",
  "measurement_units": "mm",
  "has_age_variable": true,
  "date_harmonized": "2018-05-30 12:10:37",
  "dcc_harmonization_comments": "This variable was harmonized by taking the mean of the following four measurements of common carotid intima-media thickness (IMT): maximum left near wall IMT, maximum left far wall IMT, maximum right near wall IMT and maximum right far wall IMT. In cases where values for individual measures of IMT were missing, mean IMT was calculated ignoring the missing values. Where possible, this variable was derived with component measures of IMT, but in cases where the components were not available in dbGaP, mean-of-max IMT variables derived by the studies were used for harmonization.\n\n#### CHS\n\nBaseline carotid ultrasound scans for the Original cohort were reread due to reader drift. Reread measurements of *_CHS_* subjects were used for harmonization.[^1]\n\n#### FHS\n\nMeasurements of *_FHS_* subjects were taken in systole and diastole. Measurements in diastole were used for harmonization.\n\n#### Instrumentation\n\nStudies used different instruments at their carotid ultrasound exams:\n\n| Study | Instrument                 |\n|-------|----------------------------|\n| ARIC  | Biosound 2000 II SA        |\n| CHS   | Toshiba SSA-270A           |\n| FHS   | Toshiba SSH-140A           |\n| JHS   | Hewlett Packard SONOS 4500 |\n| MESA  | GE Logiq 700               |\n\n\n[^1]:[Documentation Without Data Collection Forms phd002779.1](https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/document.cgi?study_id=phs000287.v6.p1&phd=2779)\n",
  "encoded_values": [],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C1960466"
    }
  ],
  "harmonization_units": [
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v3.pht004063.v1.phv00204712.v1", "phs000280.v3.pht004207.v1.phv00211053.v1", "phs000280.v3.pht004207.v1.phv00211054.v1", "phs000280.v3.pht004207.v1.phv00211055.v1", "phs000280.v3.pht004207.v1.phv00211059.v1", "phs000280.v3.pht004207.v1.phv00211060.v1", "phs000280.v3.pht004207.v1.phv00211061.v1", "phs000280.v3.pht004207.v1.phv00211081.v1", "phs000280.v3.pht004207.v1.phv00211082.v1", "phs000280.v3.pht004207.v1.phv00211083.v1", "phs000280.v3.pht004207.v1.phv00211087.v1", "phs000280.v3.pht004207.v1.phv00211088.v1", "phs000280.v3.pht004207.v1.phv00211089.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  # Join dataset containing Age with dataset containing IMT.\n  dataset_0 <- plyr::join_all(phen_list$source_data)\n\n  # Rename variables.\n  dataset_0 <- rename(dataset_0,\n                    age = V1AGE01,\n                    lopt_nw = LOPAMX23,\n                    lant_nw = LANAMX23,\n                    lpos_nw = LPOAMX23,\n                    ropt_nw = ROPAMX23,\n                    rant_nw = RANAMX23,\n                    rpos_nw = RPOAMX23,\n                    lopt_fw = LOPAMX45,\n                    lant_fw = LANAMX45,\n                    lpos_fw = LPOAMX45,\n                    ropt_fw = ROPAMX45,\n                    rant_fw = RANAMX45,\n                    rpos_fw = RPOAMX45)\n\n  # Convert from character to numeric.\n  dataset_0 <- mutate_if(dataset_0, is.character, as.numeric)\n\n  # Find max of Left Near Wall IMT.\n  L_nw_ds <- subset(dataset_0, select = c(lopt_nw, lant_nw, lpos_nw))\n  dataset_0$L_nw_max <- apply(L_nw_ds, 1,\n                              function(x) ifelse(all(is.na(x)), NA, max(x, na.rm = TRUE)))\n\n  # Find max of Right Near Wall IMT.\n  R_nw_ds <- subset(dataset_0, select = c(ropt_nw, rant_nw, rpos_nw))\n  dataset_0$R_nw_max <- apply(R_nw_ds, 1,\n                              function(x) ifelse(all(is.na(x)), NA, max(x, na.rm = TRUE)))\n\n  # Find max of Left Far Wall IMT.\n  L_fw_ds <- subset(dataset_0, select = c(lopt_fw, lant_fw, lpos_fw))\n  dataset_0$L_fw_max <- apply(L_fw_ds, 1,\n                              function(x) ifelse(all(is.na(x)), NA, max(x, na.rm = TRUE)))\n\n  # Find max of Right Far Wall IMT.\n  R_fw_ds <- subset(dataset_0, select = c(ropt_fw, rant_fw, rpos_fw))\n  dataset_0$R_fw_max <- apply(R_fw_ds, 1,\n                              function(x) ifelse(all(is.na(x)), NA, max(x, na.rm = TRUE)))\n\n  # Find mean of max LNW, RNW, LFW, RFW.\n  maxCols <- subset(dataset_0, select = c(L_nw_max, R_nw_max, L_fw_max, R_fw_max))\n  dataset_0$cimt <- rowMeans(maxCols)\n\n  # Create harmonized cimt dataset.\n  dataset <- subset(dataset_0, select = c(topmed_subject_id, age, cimt))\n\n  # Remove NAs.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100290.v1", "phs000287.v6.pht001452.v1.phv00100487.v1", "phs000287.v6.pht001473.v1.phv00101238.v1", "phs000287.v6.pht001473.v1.phv00101239.v1", "phs000287.v6.pht001473.v1.phv00101250.v1", "phs000287.v6.pht001473.v1.phv00101251.v1", "phs000287.v6.pht001473.v1.phv00101264.v1", "phs000287.v6.pht001473.v1.phv00101265.v1", "phs000287.v6.pht001473.v1.phv00101276.v1", "phs000287.v6.pht001473.v1.phv00101277.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  # Join dataset containing Age with dataset containing IMT.\n  dataset_0 <- plyr::join_all(phen_list$source_data)\n\n  # Rename variables.\n  dataset_0 <- rename(dataset_0,\n                      age = AGEBL,\n                      subcohort = PERSTAT,\n                      O_R_max_nw = NMAX155,\n                      O_R_max_fw = FMAX155,\n                      O_L_max_nw = NMAX555,\n                      O_L_max_fw = FMAX555,\n                      A_R_max_nw = NMAX141,\n                      A_R_max_fw = FMAX141,\n                      A_L_max_nw = NMAX541,\n                      A_L_max_fw = FMAX541)\n\n  # Convert from character to numeric.\n  dataset_0 <- mutate_if(dataset_0, is.character, as.numeric)\n\n  # Subset cohort 1 and create cimt variable.\n  dataset_orig <- subset(dataset_0, select = c(topmed_subject_id,\n                                               age,\n                                               subcohort,\n                                               O_R_max_nw,\n                                               O_R_max_fw,\n                                               O_L_max_nw,\n                                               O_L_max_fw))\n\n  dataset_orig <- dataset_orig[dataset_orig$subcohort == 1, ]\n  maxCols <- c(\"O_R_max_nw\", \"O_R_max_fw\", \"O_L_max_nw\", \"O_L_max_fw\")\n  dataset_orig$cimt <- rowMeans(dataset_orig[, maxCols], na.rm = TRUE)\n\n  # Subset cohort 2 and create cimt variable.\n  dataset_new <- subset(dataset_0, select = c(topmed_subject_id,\n                                              age,\n                                              subcohort,\n                                              A_R_max_nw,\n                                              A_R_max_fw,\n                                              A_L_max_nw,\n                                              A_L_max_fw))\n\n  dataset_new <- dataset_new[dataset_new$subcohort == 2, ]\n  maxCols <- c(\"A_R_max_nw\", \"A_R_max_fw\", \"A_L_max_nw\", \"A_L_max_fw\")\n  dataset_new$cimt <- rowMeans(dataset_new[, maxCols], na.rm = TRUE)\n\n  # Join cohort 1 and cohort 2 cimt variable by Topmed IDs.\n  dataset_orig_1 <- subset(dataset_orig, select = c(topmed_subject_id, age, cimt))\n  dataset_new_1 <- subset(dataset_new, select = c(topmed_subject_id, age, cimt))\n  dataset <- dplyr::full_join(dataset_orig_1,\n                              dataset_new_1,\n                              by = c(\"topmed_subject_id\", \"age\", \"cimt\"))\n\n  # Remove NAs.\n  dataset <- na.omit(dataset)\n}\n"
    },
    {
      "name": "FHS",
      "component_study_variables": ["phs000007.v29.pht000083.v6.phv00021728.v5", "phs000007.v29.pht003099.v4.phv00177940.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  source_data <- phen_list$source_data\n  # Join ultrasound dataset with age dataset.\n  harmonized <- left_join(source_data$pht000083, source_data$pht003099,\n                          \"topmed_subject_id\") %>%\n    # Rename variables and convert to numeric.\n    transmute(topmed_subject_id, cimt = as.numeric(CCD_MEMX), age = as.numeric(age6)) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    },
    {
      "name": "JHS",
      "component_study_variables": ["phs000286.v5.pht001949.v1.phv00126009.v1", "phs000286.v5.pht001978.v1.phv00128541.v1", "phs000286.v5.pht001978.v1.phv00128542.v1", "phs000286.v5.pht001978.v1.phv00128543.v1", "phs000286.v5.pht001978.v1.phv00128544.v1", "phs000286.v5.pht001978.v1.phv00128545.v1", "phs000286.v5.pht001978.v1.phv00128546.v1", "phs000286.v5.pht001978.v1.phv00128561.v1", "phs000286.v5.pht001978.v1.phv00128562.v1", "phs000286.v5.pht001978.v1.phv00128563.v1", "phs000286.v5.pht001978.v1.phv00128564.v1", "phs000286.v5.pht001978.v1.phv00128565.v1", "phs000286.v5.pht001978.v1.phv00128566.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n\n  # Get dataset and rename variables.\n  source_data <- phen_list$source_data\n  dataset <- inner_join(source_data$pht001949,\n                        source_data$pht001978,\n                        by = \"topmed_subject_id\") %>%\n    rename(age = AGE01)\n\n  # Substitute the value of 'NA' to missing.\n  dataset$lcl_mx45[dataset$lcl_mx45 %in% 'NA'] <- NA\n  dataset$lca_mx45[dataset$lca_mx45 %in% 'NA'] <- NA\n  dataset$lcp_mx45[dataset$lcp_mx45 %in% 'NA'] <- NA\n  dataset$rcl_mx45[dataset$rcl_mx45 %in% 'NA'] <- NA\n  dataset$rca_mx45[dataset$rca_mx45 %in% 'NA'] <- NA\n  dataset$rcp_mx45[dataset$rcp_mx45 %in% 'NA'] <- NA\n  dataset$lcl_mx23[dataset$lcl_mx23 %in% 'NA'] <- NA\n  dataset$lca_mx23[dataset$lca_mx23 %in% 'NA'] <- NA\n  dataset$lcp_mx23[dataset$lcp_mx23 %in% 'NA'] <- NA\n  dataset$rcl_mx23[dataset$rcl_mx23 %in% 'NA'] <- NA\n  dataset$rca_mx23[dataset$rca_mx23 %in% 'NA'] <- NA\n  dataset$rcp_mx23[dataset$rcp_mx23 %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Take max of the 3 measurements from the left common carotid artery far wall.\n  left_fw <- c(\"lca_mx45\", \"lcl_mx45\", \"lcp_mx45\")\n  dataset$left_fw_max <- apply(dataset[, left_fw],\n                               1,\n                               function(x) ifelse(all(is.na(x)),\n                                                  NA,\n                                                  max(x, na.rm = TRUE)))\n\n  # Take max of the 3 measurements from the right common carotid artery far wall.\n  right_fw <- c(\"rca_mx45\", \"rcl_mx45\", \"rcp_mx45\")\n  dataset$right_fw_max <- apply(dataset[, right_fw],\n                                1,\n                                function(x) ifelse(all(is.na(x)),\n                                                   NA,\n                                                   max(x, na.rm = TRUE)))\n\n  # Take max of the 3 measurements from the left common carotid artery near wall.\n  left_nw <- c(\"lca_mx23\", \"lcl_mx23\", \"lcp_mx23\")\n  dataset$left_nw_max <- apply(dataset[, left_nw],\n                               1,\n                               function(x) ifelse(all(is.na(x)),\n                                                  NA,\n                                                  max(x, na.rm = TRUE)))\n\n  # Take max of the 3 measurements from the right common carotid artery near wall.\n  right_nw <- c(\"rca_mx23\", \"rcl_mx23\", \"rcp_mx23\")\n  dataset$right_nw_max <- apply(dataset[, right_nw],\n                                1,\n                                function(x) ifelse(all(is.na(x)),\n                                                   NA,\n                                                   max(x, na.rm = TRUE)))\n\n  # Take mean of the left and right, far and near wall max.\n  wmax <- c(\"left_fw_max\", \"right_fw_max\", \"left_nw_max\", \"right_nw_max\")\n  dataset <- mutate(dataset, cimt = rowMeans(dataset[, wmax], na.rm = TRUE))\n\n  # Select the columns for output.\n  dataset <- select(dataset, topmed_subject_id, age, cimt)\n\n  # Remove records with NAs from dataset.\n  dataset <- dataset[!is.na(dataset$age) & !is.na(dataset$cimt), ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "MESA_airnr",
      "component_study_variables": ["phs000209.v13.pht001111.v4.phv00082639.v2", "phs000209.v13.pht001528.v1.phv00111971.v1", "phs000209.v13.pht001528.v1.phv00111975.v1", "phs000209.v13.pht001528.v1.phv00112047.v1", "phs000209.v13.pht001528.v1.phv00112051.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  source_data <- phen_list$source_data\n  # Join age dataset with ultrasound dataset.\n  harmonized <- left_join(source_data$pht001528, source_data$pht001111,\n                          \"topmed_subject_id\") %>%\n    # Convert character vectors to numeric.\n    mutate_if(is.character, as.numeric) %>%\n    # Specify calculations will be row-wise.\n    rowwise() %>%\n    # Select and rename necessary variables, calculate mean cimt.\n    transmute(topmed_subject_id, age = age1c,\n              cimt = mean(c(rcfwmax4, rcnwmax4, lcfwmax4, lcnwmax4), na.rm = TRUE)) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    },
    {
      "name": "MESA_classic_family",
      "component_study_variables": ["phs000209.v13.pht001116.v10.phv00084442.v3", "phs000209.v13.pht001116.v10.phv00084877.v2", "phs000209.v13.pht001116.v10.phv00084881.v2", "phs000209.v13.pht001116.v10.phv00084956.v2", "phs000209.v13.pht001116.v10.phv00084959.v2", "phs000209.v13.pht001121.v3.phv00087071.v1", "phs000209.v13.pht001121.v3.phv00087557.v1", "phs000209.v13.pht001121.v3.phv00087558.v1", "phs000209.v13.pht001121.v3.phv00087559.v1", "phs000209.v13.pht001121.v3.phv00087560.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  source_data <- phen_list$source_data\n  # Rename variables in Family Exam dataset to match Classic.\n  source_data$pht001121 <- rename(source_data$pht001121, age1c = agefc,\n                                  rcfwmax1 = rcfwmaxf, rcnwmax1 = rcnwmaxf,\n                                  lcfwmax1 = lcfwmaxf, lcnwmax1 = lcnwmaxf)\n  # Bind dataframe row-wise.\n  harmonized <- bind_rows(source_data) %>%\n    # Convert character vectors to numeric.\n    mutate_if(is.character, as.numeric) %>%\n    # Specify calculations will be row-wise.\n    rowwise() %>%\n    # Select and rename necessary variables, calculate mean cimt.\n    transmute(topmed_subject_id, age = age1c,\n              cimt = mean(c(lcfwmax1, lcnwmax1, rcfwmax1, rcnwmax1), na.rm = TRUE)) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    }
  ]
}
