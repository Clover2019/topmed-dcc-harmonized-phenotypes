{
  "name": "cimt_1",
  "phenotype_concept": "cimt",
  "concept_variant": 1,
  "description": "Common carotid intima-media thickness, calculated as the mean of two values: mean of multiple thickness estimates from the left far wall and from the right far wall.",
  "version": 1,
  "dcc_harmonization_id": 85,
  "data_type": "decimal",
  "measurement_units": "mm",
  "has_age_variable": true,
  "date_harmonized": "2018-05-30 11:44:19",
  "dcc_harmonization_comments": "This variable was harmonized by taking the mean of mean left common carotid artery far wall intima-media thickness (IMT) and mean right common carotid artery far wall IMT. In cases where values for mean left far wall thickness or mean right far wall thickness was missing, mean IMT was calculated ignoring the missing values. Where possible, this variable was derived with component measures of IMT, but in cases where the components were not available in dbGaP, mean-of-mean IMT variables derived by the studies were used for harmonization.\n\n#### MESA\n\nMean left IMT was not available for the *_MESA_* Family subcohort, so the only component study variable used for this group is mean right IMT.\n\n\n#### Instrumentation\n\nStudies used different instruments at their carotid ultrasound exams:\n\n| Study | Instrument                 |\n|-------|----------------------------|\n| Amish | ATL Phillps HDI 5000       |\n| ARIC  | Biosound 2000 II SA        |\n| CHS   | Toshiba SSA-270A           |\n| FHS   | Toshiba SSH-140A           |\n| JHS   | Hewlett Packard SONOS 4500 |\n| MESA  | GE Logiq 700               |\n",
  "encoded_values": [],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C1960466"
    }
  ],
  "harmonization_units": [
    {
      "name": "Amish",
      "component_study_variables": ["phs000956.v2.pht005002.v1.phv00252976.v1", "phs000956.v2.pht005002.v1.phv00252988.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n\n  # Get dataset and rename variables.\n  dataset <- phen_list$source_data$pht005002 %>%\n    rename(age = age_baseline, cimt = imt_mean_farwall_cca_baseline)\n\n  # Substitute the winsorized age value of '90+' to a numeric value 90.\n  dataset$age[dataset$age %in% '90+'] <- 90\n\n  # Substitute the value of 'NA' to missing.\n  dataset$age[dataset$age %in% 'NA'] <- NA\n  dataset$cimt[dataset$cimt %in% 'NA'] <- NA\n\n  # Remove records with NAs from dataset.\n  dataset <- dataset[!is.na(dataset$age) & !is.na(dataset$cimt), ]\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v3.pht004063.v1.phv00204712.v1", "phs000280.v3.pht004207.v1.phv00211095.v1", "phs000280.v3.pht004207.v1.phv00211096.v1", "phs000280.v3.pht004207.v1.phv00211097.v1", "phs000280.v3.pht004207.v1.phv00211101.v1", "phs000280.v3.pht004207.v1.phv00211102.v1", "phs000280.v3.pht004207.v1.phv00211103.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  # Join dataset containing Age with dataset containing IMT.\n  dataset <- plyr::join_all(phen_list$source_data)\n\n  # Rename variables.\n  dataset <- rename(dataset,\n                    age = V1AGE01,\n                    ropt = ROPAAV45,\n                    rant = RANAAV45,\n                    rpos = RPOAAV45,\n                    lopt = LOPAAV45,\n                    lant = LANAAV45,\n                    lpos = LPOAAV45)\n\n  # Convert from character to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Calculate mean of the Right IMT measurements.\n  dataset_R <- subset(dataset, select = c(topmed_subject_id, ropt, rant, rpos))\n  dataset$mean_imt_R <- rowMeans(subset(dataset_R, select = -c(topmed_subject_id)), na.rm = TRUE)\n\n  # Calculate mean of the Left IMT measurements.\n  dataset_L <- subset(dataset, select = c(topmed_subject_id, lopt, lant, lpos))\n  dataset$mean_imt_L <- rowMeans(subset(dataset_L, select = -c(topmed_subject_id)), na.rm = TRUE)\n\n  # Calculate mean of Right IMT mean measurement and Left IMT mean measurement.\n  means_RL <- subset(dataset, select = c(topmed_subject_id, mean_imt_R, mean_imt_L))\n  dataset$cimt <- rowMeans(subset(means_RL, select = -c(topmed_subject_id)), na.rm = TRUE)\n\n  # Include only relevant variables in final dataset.\n  dataset <- subset(dataset, select = c(topmed_subject_id, age, cimt))\n\n  # Remove NAs.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100487.v1", "phs000287.v6.pht001468.v1.phv00100864.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n\n  # Join age and imt data into one dataset.\n  dataset <- plyr::join_all(phen_list$source_data) %>%\n\n    # Rename age and far wall mean cimt variables.\n    rename(age = AGEBL, cimt = CCA_FWME) %>%\n\n    # Convert from character to numeric.\n    mutate_if(is.character, as.numeric) %>%\n\n    # Remove NAs\n    na.omit() %>%\n\n    return()\n}\n"
    },
    {
      "name": "FHS",
      "component_study_variables": ["phs000007.v29.pht000907.v5.phv00076366.v4", "phs000007.v29.pht003099.v4.phv00177940.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  source_data <- phen_list$source_data\n  harmonized <- source_data$pht000907 %>%\n    # Join age dataset and cimt dataset.\n    full_join(source_data$pht003099, \"topmed_subject_id\") %>%\n    # Select, convert and rename variables.\n    transmute(topmed_subject_id,\n              cimt = as.numeric(cca_fw_mean_imt),\n              age = as.numeric(age6)) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    },
    {
      "name": "JHS",
      "component_study_variables": ["phs000286.v5.pht001949.v1.phv00126009.v1", "phs000286.v5.pht001978.v1.phv00128531.v1", "phs000286.v5.pht001978.v1.phv00128532.v1", "phs000286.v5.pht001978.v1.phv00128533.v1", "phs000286.v5.pht001978.v1.phv00128534.v1", "phs000286.v5.pht001978.v1.phv00128535.v1", "phs000286.v5.pht001978.v1.phv00128536.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n\n  # Get dataset and rename variables.\n  source_data <- phen_list$source_data\n  dataset <- inner_join(source_data$pht001949,\n                        source_data$pht001978,\n                        by = \"topmed_subject_id\") %>%\n    rename(age = AGE01)\n\n  # Substitute the value of 'NA' to missing.\n  dataset$lcl_av45[dataset$lcl_av45 %in% 'NA'] <- NA\n  dataset$lca_av45[dataset$lca_av45 %in% 'NA'] <- NA\n  dataset$lcp_av45[dataset$lcp_av45 %in% 'NA'] <- NA\n  dataset$rcl_av45[dataset$rcl_av45 %in% 'NA'] <- NA\n  dataset$rca_av45[dataset$rca_av45 %in% 'NA'] <- NA\n  dataset$rcp_av45[dataset$rcp_av45 %in% 'NA'] <- NA\n\n  # Convert character values to numeric.\n  dataset <- mutate_if(dataset, is.character, as.numeric)\n\n  # Take mean of the 3 measurements from the left common carotid artery.\n  left <- c(\"lcl_av45\", \"lca_av45\", \"lcp_av45\")\n  dataset <- mutate(dataset, left_av = rowMeans(dataset[, left], na.rm = TRUE))\n\n  # Take mean of the 3 measurements from the right common carotid artery.\n  right <- c(\"rcl_av45\", \"rca_av45\", \"rcp_av45\")\n  dataset <- mutate(dataset, right_av = rowMeans(dataset[, right], na.rm = TRUE))\n\n  # Take mean of the left and right means.\n  av <- c(\"left_av\", \"right_av\")\n  dataset <- mutate(dataset, cimt = rowMeans(dataset[, av], na.rm = TRUE))\n\n  # Select the columns for output.\n  dataset <- select(dataset, topmed_subject_id, age, cimt)\n\n  # Remove records with NAs from dataset.\n  dataset <- dataset[!is.na(dataset$age) & !is.na(dataset$cimt), ]\n\n  return(dataset)\n}\n"
    },
    {
      "name": "MESA_AirNR",
      "component_study_variables": ["phs000209.v13.pht001111.v4.phv00082639.v2", "phs000209.v13.pht001528.v1.phv00111973.v1", "phs000209.v13.pht001528.v1.phv00112049.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  source_data <- phen_list$source_data\n  harmonized <- source_data$pht001528 %>%\n    # Join age dataset and phenotype dataset.\n    inner_join(source_data$pht001111, \"topmed_subject_id\") %>%\n    # Convert character vectors to numeric.\n    mutate_if(is.character, as.numeric) %>%\n    # Specify operations on dataframe are row-wise.\n    rowwise() %>%\n    # Rename variables and calculate the mean of left and right far-wall\n    # thickness.\n    transmute(topmed_subject_id, age = age1c,\n              cimt = mean(c(rcfwmn4, lcfwmn4), na.rm = TRUE)) %>%\n    # Exlcude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    },
    {
      "name": "MESA_classic_family",
      "component_study_variables": ["phs000209.v13.pht001116.v10.phv00084442.v3", "phs000209.v13.pht001116.v10.phv00084879.v2", "phs000209.v13.pht001116.v10.phv00084958.v2", "phs000209.v13.pht001121.v3.phv00087071.v1", "phs000209.v13.pht001121.v3.phv00128698.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  source_data <- phen_list$source_data\n  # Rename variables from Family exam dataset to match Classic variable names.\n  harmonized <- rename(source_data$pht001121, rcfwmn1 = rcfwmnf,\n                       age1c = agefc) %>%\n    # Bind dataframes row-wise.\n    bind_rows(source_data$pht001116) %>%\n    # Convert character vectors to numeric.\n    mutate_if(is.character, as.numeric) %>%\n    # Specify operations will be row-wise.\n    rowwise() %>%\n    # Rename variables, and calculate mean-of-mean cimt.\n    transmute(topmed_subject_id, cimt = mean(c(rcfwmn1, lcfwmn1), na.rm = TRUE),\n              age = age1c) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(harmonized)\n}\n"
    }
  ]
}
