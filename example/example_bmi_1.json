{
  "name": "example_bmi_1",
  "phenotype_concept": "example_bmi",
  "concept_variant": 1,
  "description": "Example body mass index of subject at baseline visit.",
  "version": 1,
  "dcc_harmonization_id": 3,
  "data_type": "decimal",
  "measurement_units": "kg / m^2",
  "has_age_variable": true,
  "date_harmonized": "2020-03-25 11:00:00",
  "dcc_harmonization_comments": "This variable was harmonized by calculating BMI from height and weight using the standard formula.\n",
  "encoded_values": [],
  "controlled_vocabulary": [],
  "harmonization_units": [
    {
      "name": "DCC_harmonized",
      "component_study_variables": [],
      "component_harmonized_variables": [
        {
          "dcc_harmonization_id": 1,
          "name": "example_height_1",
          "version": 1
        },
        {
          "dcc_harmonization_id": 2,
          "name": "example_weight_1",
          "version": 1
        }
      ],
      "harmonization_function": "harmonize <- function(phen_list) {\n  library(dplyr)\n  harmonized_data <- phen_list$harmonized_data\n  height <- harmonized_data$example_height_1 %>%\n    select(topmed_subject_id, example_height_1, age_at_example_height_1)\n  weight <- harmonized_data$example_weight_1 %>%\n    select(topmed_subject_id, example_weight_1)\n\n  dataset <- height %>%\n    # Merge with the weight dataset.\n    left_join(weight, by = c(\"topmed_subject_id\")) %>%\n    # Calculate BMI.\n    mutate(\n      example_bmi = as.numeric(example_weight_1) ^ 2 / as.numeric(example_height_1)\n    ) %>%\n    # Rename age column.\n    rename(\n      age = age_at_example_height_1\n    ) %>%\n    # Convert age to numeric.\n    mutate(\n      age = as.numeric(age)\n    ) %>%\n    # Keep only required columns.\n    select(topmed_subject_id, example_bmi, age)\n\n  # Return the final dataset.\n  dataset\n\n}\n"
    }
  ]
}
